/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 23.0, "minX": 0.0, "maxY": 1361.0, "series": [{"data": [[0.0, 44.0], [0.1, 254.0], [0.2, 255.0], [0.3, 256.0], [0.4, 257.0], [0.5, 257.0], [0.6, 257.0], [0.7, 258.0], [0.8, 259.0], [0.9, 259.0], [1.0, 259.0], [1.1, 260.0], [1.2, 260.0], [1.3, 260.0], [1.4, 260.0], [1.5, 261.0], [1.6, 261.0], [1.7, 261.0], [1.8, 261.0], [1.9, 261.0], [2.0, 262.0], [2.1, 262.0], [2.2, 262.0], [2.3, 262.0], [2.4, 263.0], [2.5, 263.0], [2.6, 263.0], [2.7, 263.0], [2.8, 263.0], [2.9, 263.0], [3.0, 263.0], [3.1, 264.0], [3.2, 264.0], [3.3, 264.0], [3.4, 264.0], [3.5, 264.0], [3.6, 264.0], [3.7, 264.0], [3.8, 265.0], [3.9, 265.0], [4.0, 265.0], [4.1, 265.0], [4.2, 265.0], [4.3, 265.0], [4.4, 265.0], [4.5, 266.0], [4.6, 266.0], [4.7, 266.0], [4.8, 266.0], [4.9, 266.0], [5.0, 266.0], [5.1, 266.0], [5.2, 266.0], [5.3, 267.0], [5.4, 267.0], [5.5, 267.0], [5.6, 267.0], [5.7, 267.0], [5.8, 267.0], [5.9, 267.0], [6.0, 267.0], [6.1, 267.0], [6.2, 267.0], [6.3, 267.0], [6.4, 268.0], [6.5, 268.0], [6.6, 268.0], [6.7, 268.0], [6.8, 268.0], [6.9, 268.0], [7.0, 268.0], [7.1, 268.0], [7.2, 268.0], [7.3, 268.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 269.0], [8.1, 269.0], [8.2, 269.0], [8.3, 269.0], [8.4, 270.0], [8.5, 270.0], [8.6, 270.0], [8.7, 270.0], [8.8, 270.0], [8.9, 270.0], [9.0, 270.0], [9.1, 270.0], [9.2, 270.0], [9.3, 270.0], [9.4, 270.0], [9.5, 271.0], [9.6, 271.0], [9.7, 271.0], [9.8, 271.0], [9.9, 271.0], [10.0, 271.0], [10.1, 271.0], [10.2, 271.0], [10.3, 271.0], [10.4, 271.0], [10.5, 271.0], [10.6, 271.0], [10.7, 271.0], [10.8, 271.0], [10.9, 272.0], [11.0, 272.0], [11.1, 272.0], [11.2, 272.0], [11.3, 272.0], [11.4, 272.0], [11.5, 272.0], [11.6, 272.0], [11.7, 272.0], [11.8, 272.0], [11.9, 272.0], [12.0, 272.0], [12.1, 273.0], [12.2, 273.0], [12.3, 273.0], [12.4, 273.0], [12.5, 273.0], [12.6, 273.0], [12.7, 273.0], [12.8, 273.0], [12.9, 273.0], [13.0, 273.0], [13.1, 274.0], [13.2, 274.0], [13.3, 274.0], [13.4, 274.0], [13.5, 274.0], [13.6, 274.0], [13.7, 274.0], [13.8, 274.0], [13.9, 274.0], [14.0, 274.0], [14.1, 274.0], [14.2, 274.0], [14.3, 275.0], [14.4, 275.0], [14.5, 275.0], [14.6, 275.0], [14.7, 275.0], [14.8, 275.0], [14.9, 275.0], [15.0, 275.0], [15.1, 275.0], [15.2, 275.0], [15.3, 275.0], [15.4, 275.0], [15.5, 276.0], [15.6, 276.0], [15.7, 276.0], [15.8, 276.0], [15.9, 276.0], [16.0, 276.0], [16.1, 276.0], [16.2, 276.0], [16.3, 276.0], [16.4, 276.0], [16.5, 276.0], [16.6, 276.0], [16.7, 276.0], [16.8, 277.0], [16.9, 277.0], [17.0, 277.0], [17.1, 277.0], [17.2, 277.0], [17.3, 277.0], [17.4, 277.0], [17.5, 277.0], [17.6, 277.0], [17.7, 277.0], [17.8, 277.0], [17.9, 277.0], [18.0, 278.0], [18.1, 278.0], [18.2, 278.0], [18.3, 278.0], [18.4, 278.0], [18.5, 278.0], [18.6, 278.0], [18.7, 278.0], [18.8, 278.0], [18.9, 278.0], [19.0, 278.0], [19.1, 278.0], [19.2, 279.0], [19.3, 279.0], [19.4, 279.0], [19.5, 279.0], [19.6, 279.0], [19.7, 279.0], [19.8, 279.0], [19.9, 279.0], [20.0, 279.0], [20.1, 279.0], [20.2, 279.0], [20.3, 279.0], [20.4, 280.0], [20.5, 280.0], [20.6, 280.0], [20.7, 280.0], [20.8, 280.0], [20.9, 280.0], [21.0, 280.0], [21.1, 280.0], [21.2, 280.0], [21.3, 280.0], [21.4, 280.0], [21.5, 281.0], [21.6, 281.0], [21.7, 281.0], [21.8, 281.0], [21.9, 281.0], [22.0, 281.0], [22.1, 281.0], [22.2, 281.0], [22.3, 281.0], [22.4, 281.0], [22.5, 281.0], [22.6, 281.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 282.0], [23.2, 282.0], [23.3, 282.0], [23.4, 282.0], [23.5, 282.0], [23.6, 282.0], [23.7, 282.0], [23.8, 282.0], [23.9, 282.0], [24.0, 283.0], [24.1, 283.0], [24.2, 283.0], [24.3, 283.0], [24.4, 283.0], [24.5, 283.0], [24.6, 283.0], [24.7, 283.0], [24.8, 283.0], [24.9, 283.0], [25.0, 284.0], [25.1, 284.0], [25.2, 284.0], [25.3, 284.0], [25.4, 284.0], [25.5, 284.0], [25.6, 284.0], [25.7, 284.0], [25.8, 284.0], [25.9, 284.0], [26.0, 284.0], [26.1, 284.0], [26.2, 284.0], [26.3, 284.0], [26.4, 285.0], [26.5, 285.0], [26.6, 285.0], [26.7, 285.0], [26.8, 285.0], [26.9, 285.0], [27.0, 285.0], [27.1, 285.0], [27.2, 285.0], [27.3, 285.0], [27.4, 286.0], [27.5, 286.0], [27.6, 286.0], [27.7, 286.0], [27.8, 286.0], [27.9, 286.0], [28.0, 286.0], [28.1, 286.0], [28.2, 286.0], [28.3, 286.0], [28.4, 286.0], [28.5, 287.0], [28.6, 287.0], [28.7, 287.0], [28.8, 287.0], [28.9, 287.0], [29.0, 287.0], [29.1, 287.0], [29.2, 287.0], [29.3, 287.0], [29.4, 287.0], [29.5, 287.0], [29.6, 288.0], [29.7, 288.0], [29.8, 288.0], [29.9, 288.0], [30.0, 288.0], [30.1, 288.0], [30.2, 288.0], [30.3, 288.0], [30.4, 288.0], [30.5, 288.0], [30.6, 289.0], [30.7, 289.0], [30.8, 289.0], [30.9, 289.0], [31.0, 289.0], [31.1, 289.0], [31.2, 289.0], [31.3, 289.0], [31.4, 289.0], [31.5, 289.0], [31.6, 289.0], [31.7, 289.0], [31.8, 290.0], [31.9, 290.0], [32.0, 290.0], [32.1, 290.0], [32.2, 290.0], [32.3, 290.0], [32.4, 290.0], [32.5, 290.0], [32.6, 290.0], [32.7, 290.0], [32.8, 291.0], [32.9, 291.0], [33.0, 291.0], [33.1, 291.0], [33.2, 291.0], [33.3, 291.0], [33.4, 291.0], [33.5, 291.0], [33.6, 291.0], [33.7, 292.0], [33.8, 292.0], [33.9, 292.0], [34.0, 292.0], [34.1, 292.0], [34.2, 292.0], [34.3, 292.0], [34.4, 292.0], [34.5, 292.0], [34.6, 292.0], [34.7, 293.0], [34.8, 293.0], [34.9, 293.0], [35.0, 293.0], [35.1, 293.0], [35.2, 293.0], [35.3, 293.0], [35.4, 293.0], [35.5, 294.0], [35.6, 294.0], [35.7, 294.0], [35.8, 294.0], [35.9, 294.0], [36.0, 294.0], [36.1, 294.0], [36.2, 294.0], [36.3, 294.0], [36.4, 295.0], [36.5, 295.0], [36.6, 295.0], [36.7, 295.0], [36.8, 295.0], [36.9, 295.0], [37.0, 295.0], [37.1, 295.0], [37.2, 295.0], [37.3, 296.0], [37.4, 296.0], [37.5, 296.0], [37.6, 296.0], [37.7, 296.0], [37.8, 296.0], [37.9, 296.0], [38.0, 296.0], [38.1, 297.0], [38.2, 297.0], [38.3, 297.0], [38.4, 297.0], [38.5, 297.0], [38.6, 297.0], [38.7, 297.0], [38.8, 298.0], [38.9, 298.0], [39.0, 298.0], [39.1, 298.0], [39.2, 298.0], [39.3, 298.0], [39.4, 298.0], [39.5, 298.0], [39.6, 299.0], [39.7, 299.0], [39.8, 299.0], [39.9, 299.0], [40.0, 299.0], [40.1, 299.0], [40.2, 300.0], [40.3, 300.0], [40.4, 300.0], [40.5, 300.0], [40.6, 300.0], [40.7, 300.0], [40.8, 301.0], [40.9, 301.0], [41.0, 301.0], [41.1, 301.0], [41.2, 301.0], [41.3, 301.0], [41.4, 302.0], [41.5, 302.0], [41.6, 302.0], [41.7, 302.0], [41.8, 302.0], [41.9, 302.0], [42.0, 302.0], [42.1, 302.0], [42.2, 303.0], [42.3, 303.0], [42.4, 303.0], [42.5, 303.0], [42.6, 303.0], [42.7, 303.0], [42.8, 304.0], [42.9, 304.0], [43.0, 304.0], [43.1, 304.0], [43.2, 304.0], [43.3, 304.0], [43.4, 304.0], [43.5, 305.0], [43.6, 305.0], [43.7, 305.0], [43.8, 305.0], [43.9, 305.0], [44.0, 305.0], [44.1, 305.0], [44.2, 306.0], [44.3, 306.0], [44.4, 306.0], [44.5, 306.0], [44.6, 306.0], [44.7, 306.0], [44.8, 307.0], [44.9, 307.0], [45.0, 307.0], [45.1, 307.0], [45.2, 307.0], [45.3, 307.0], [45.4, 307.0], [45.5, 308.0], [45.6, 308.0], [45.7, 308.0], [45.8, 308.0], [45.9, 308.0], [46.0, 308.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 309.0], [46.5, 309.0], [46.6, 309.0], [46.7, 309.0], [46.8, 309.0], [46.9, 310.0], [47.0, 310.0], [47.1, 310.0], [47.2, 310.0], [47.3, 310.0], [47.4, 311.0], [47.5, 311.0], [47.6, 311.0], [47.7, 311.0], [47.8, 311.0], [47.9, 311.0], [48.0, 311.0], [48.1, 312.0], [48.2, 312.0], [48.3, 312.0], [48.4, 312.0], [48.5, 312.0], [48.6, 313.0], [48.7, 313.0], [48.8, 313.0], [48.9, 313.0], [49.0, 313.0], [49.1, 313.0], [49.2, 313.0], [49.3, 314.0], [49.4, 314.0], [49.5, 314.0], [49.6, 314.0], [49.7, 314.0], [49.8, 314.0], [49.9, 315.0], [50.0, 315.0], [50.1, 315.0], [50.2, 315.0], [50.3, 315.0], [50.4, 315.0], [50.5, 316.0], [50.6, 316.0], [50.7, 316.0], [50.8, 316.0], [50.9, 316.0], [51.0, 316.0], [51.1, 316.0], [51.2, 317.0], [51.3, 317.0], [51.4, 317.0], [51.5, 317.0], [51.6, 318.0], [51.7, 318.0], [51.8, 318.0], [51.9, 318.0], [52.0, 318.0], [52.1, 318.0], [52.2, 319.0], [52.3, 319.0], [52.4, 319.0], [52.5, 319.0], [52.6, 319.0], [52.7, 319.0], [52.8, 319.0], [52.9, 320.0], [53.0, 320.0], [53.1, 320.0], [53.2, 320.0], [53.3, 320.0], [53.4, 320.0], [53.5, 321.0], [53.6, 321.0], [53.7, 321.0], [53.8, 321.0], [53.9, 321.0], [54.0, 321.0], [54.1, 321.0], [54.2, 322.0], [54.3, 322.0], [54.4, 322.0], [54.5, 322.0], [54.6, 322.0], [54.7, 322.0], [54.8, 323.0], [54.9, 323.0], [55.0, 323.0], [55.1, 323.0], [55.2, 323.0], [55.3, 324.0], [55.4, 324.0], [55.5, 324.0], [55.6, 324.0], [55.7, 324.0], [55.8, 325.0], [55.9, 325.0], [56.0, 325.0], [56.1, 325.0], [56.2, 325.0], [56.3, 326.0], [56.4, 326.0], [56.5, 326.0], [56.6, 326.0], [56.7, 326.0], [56.8, 326.0], [56.9, 326.0], [57.0, 327.0], [57.1, 327.0], [57.2, 327.0], [57.3, 327.0], [57.4, 327.0], [57.5, 328.0], [57.6, 328.0], [57.7, 328.0], [57.8, 328.0], [57.9, 328.0], [58.0, 329.0], [58.1, 329.0], [58.2, 329.0], [58.3, 329.0], [58.4, 329.0], [58.5, 330.0], [58.6, 330.0], [58.7, 330.0], [58.8, 330.0], [58.9, 330.0], [59.0, 331.0], [59.1, 331.0], [59.2, 331.0], [59.3, 331.0], [59.4, 331.0], [59.5, 332.0], [59.6, 332.0], [59.7, 332.0], [59.8, 332.0], [59.9, 332.0], [60.0, 333.0], [60.1, 333.0], [60.2, 333.0], [60.3, 333.0], [60.4, 333.0], [60.5, 334.0], [60.6, 334.0], [60.7, 334.0], [60.8, 334.0], [60.9, 334.0], [61.0, 335.0], [61.1, 335.0], [61.2, 335.0], [61.3, 335.0], [61.4, 336.0], [61.5, 336.0], [61.6, 336.0], [61.7, 336.0], [61.8, 336.0], [61.9, 337.0], [62.0, 337.0], [62.1, 337.0], [62.2, 337.0], [62.3, 337.0], [62.4, 338.0], [62.5, 338.0], [62.6, 338.0], [62.7, 338.0], [62.8, 338.0], [62.9, 339.0], [63.0, 339.0], [63.1, 339.0], [63.2, 339.0], [63.3, 339.0], [63.4, 340.0], [63.5, 340.0], [63.6, 340.0], [63.7, 340.0], [63.8, 341.0], [63.9, 341.0], [64.0, 341.0], [64.1, 341.0], [64.2, 341.0], [64.3, 342.0], [64.4, 342.0], [64.5, 342.0], [64.6, 342.0], [64.7, 343.0], [64.8, 343.0], [64.9, 343.0], [65.0, 343.0], [65.1, 344.0], [65.2, 344.0], [65.3, 344.0], [65.4, 344.0], [65.5, 344.0], [65.6, 345.0], [65.7, 345.0], [65.8, 345.0], [65.9, 345.0], [66.0, 345.0], [66.1, 346.0], [66.2, 346.0], [66.3, 346.0], [66.4, 346.0], [66.5, 347.0], [66.6, 347.0], [66.7, 347.0], [66.8, 347.0], [66.9, 348.0], [67.0, 348.0], [67.1, 348.0], [67.2, 348.0], [67.3, 348.0], [67.4, 348.0], [67.5, 349.0], [67.6, 349.0], [67.7, 349.0], [67.8, 350.0], [67.9, 350.0], [68.0, 350.0], [68.1, 350.0], [68.2, 350.0], [68.3, 351.0], [68.4, 351.0], [68.5, 351.0], [68.6, 352.0], [68.7, 352.0], [68.8, 352.0], [68.9, 352.0], [69.0, 353.0], [69.1, 353.0], [69.2, 353.0], [69.3, 353.0], [69.4, 354.0], [69.5, 354.0], [69.6, 354.0], [69.7, 354.0], [69.8, 354.0], [69.9, 355.0], [70.0, 355.0], [70.1, 355.0], [70.2, 355.0], [70.3, 356.0], [70.4, 356.0], [70.5, 356.0], [70.6, 357.0], [70.7, 357.0], [70.8, 357.0], [70.9, 357.0], [71.0, 358.0], [71.1, 358.0], [71.2, 359.0], [71.3, 359.0], [71.4, 359.0], [71.5, 359.0], [71.6, 360.0], [71.7, 360.0], [71.8, 360.0], [71.9, 361.0], [72.0, 361.0], [72.1, 361.0], [72.2, 361.0], [72.3, 362.0], [72.4, 362.0], [72.5, 362.0], [72.6, 362.0], [72.7, 363.0], [72.8, 363.0], [72.9, 363.0], [73.0, 364.0], [73.1, 364.0], [73.2, 364.0], [73.3, 364.0], [73.4, 365.0], [73.5, 365.0], [73.6, 365.0], [73.7, 365.0], [73.8, 366.0], [73.9, 366.0], [74.0, 366.0], [74.1, 366.0], [74.2, 367.0], [74.3, 367.0], [74.4, 367.0], [74.5, 368.0], [74.6, 368.0], [74.7, 368.0], [74.8, 368.0], [74.9, 369.0], [75.0, 369.0], [75.1, 369.0], [75.2, 370.0], [75.3, 370.0], [75.4, 371.0], [75.5, 371.0], [75.6, 371.0], [75.7, 372.0], [75.8, 372.0], [75.9, 372.0], [76.0, 372.0], [76.1, 373.0], [76.2, 373.0], [76.3, 373.0], [76.4, 374.0], [76.5, 374.0], [76.6, 374.0], [76.7, 375.0], [76.8, 375.0], [76.9, 375.0], [77.0, 376.0], [77.1, 376.0], [77.2, 376.0], [77.3, 377.0], [77.4, 377.0], [77.5, 377.0], [77.6, 378.0], [77.7, 378.0], [77.8, 379.0], [77.9, 379.0], [78.0, 379.0], [78.1, 379.0], [78.2, 380.0], [78.3, 380.0], [78.4, 380.0], [78.5, 381.0], [78.6, 381.0], [78.7, 381.0], [78.8, 382.0], [78.9, 382.0], [79.0, 382.0], [79.1, 382.0], [79.2, 383.0], [79.3, 383.0], [79.4, 384.0], [79.5, 384.0], [79.6, 384.0], [79.7, 385.0], [79.8, 385.0], [79.9, 386.0], [80.0, 386.0], [80.1, 386.0], [80.2, 387.0], [80.3, 387.0], [80.4, 387.0], [80.5, 388.0], [80.6, 388.0], [80.7, 389.0], [80.8, 389.0], [80.9, 390.0], [81.0, 390.0], [81.1, 390.0], [81.2, 391.0], [81.3, 391.0], [81.4, 391.0], [81.5, 392.0], [81.6, 392.0], [81.7, 393.0], [81.8, 393.0], [81.9, 394.0], [82.0, 394.0], [82.1, 394.0], [82.2, 395.0], [82.3, 395.0], [82.4, 396.0], [82.5, 396.0], [82.6, 397.0], [82.7, 397.0], [82.8, 398.0], [82.9, 398.0], [83.0, 399.0], [83.1, 399.0], [83.2, 400.0], [83.3, 400.0], [83.4, 400.0], [83.5, 401.0], [83.6, 401.0], [83.7, 402.0], [83.8, 402.0], [83.9, 403.0], [84.0, 403.0], [84.1, 403.0], [84.2, 403.0], [84.3, 404.0], [84.4, 404.0], [84.5, 405.0], [84.6, 405.0], [84.7, 406.0], [84.8, 406.0], [84.9, 407.0], [85.0, 408.0], [85.1, 408.0], [85.2, 408.0], [85.3, 409.0], [85.4, 409.0], [85.5, 410.0], [85.6, 411.0], [85.7, 411.0], [85.8, 412.0], [85.9, 412.0], [86.0, 413.0], [86.1, 413.0], [86.2, 414.0], [86.3, 414.0], [86.4, 415.0], [86.5, 415.0], [86.6, 416.0], [86.7, 416.0], [86.8, 417.0], [86.9, 417.0], [87.0, 418.0], [87.1, 418.0], [87.2, 419.0], [87.3, 420.0], [87.4, 420.0], [87.5, 421.0], [87.6, 421.0], [87.7, 422.0], [87.8, 422.0], [87.9, 423.0], [88.0, 423.0], [88.1, 424.0], [88.2, 424.0], [88.3, 425.0], [88.4, 425.0], [88.5, 426.0], [88.6, 426.0], [88.7, 427.0], [88.8, 428.0], [88.9, 428.0], [89.0, 429.0], [89.1, 429.0], [89.2, 430.0], [89.3, 431.0], [89.4, 432.0], [89.5, 432.0], [89.6, 433.0], [89.7, 433.0], [89.8, 434.0], [89.9, 435.0], [90.0, 435.0], [90.1, 436.0], [90.2, 437.0], [90.3, 437.0], [90.4, 438.0], [90.5, 438.0], [90.6, 439.0], [90.7, 440.0], [90.8, 440.0], [90.9, 441.0], [91.0, 442.0], [91.1, 442.0], [91.2, 443.0], [91.3, 444.0], [91.4, 444.0], [91.5, 445.0], [91.6, 446.0], [91.7, 446.0], [91.8, 447.0], [91.9, 448.0], [92.0, 449.0], [92.1, 450.0], [92.2, 450.0], [92.3, 451.0], [92.4, 452.0], [92.5, 453.0], [92.6, 454.0], [92.7, 455.0], [92.8, 455.0], [92.9, 456.0], [93.0, 457.0], [93.1, 458.0], [93.2, 459.0], [93.3, 460.0], [93.4, 460.0], [93.5, 461.0], [93.6, 462.0], [93.7, 463.0], [93.8, 465.0], [93.9, 466.0], [94.0, 467.0], [94.1, 468.0], [94.2, 469.0], [94.3, 470.0], [94.4, 471.0], [94.5, 472.0], [94.6, 473.0], [94.7, 474.0], [94.8, 475.0], [94.9, 476.0], [95.0, 478.0], [95.1, 479.0], [95.2, 480.0], [95.3, 482.0], [95.4, 482.0], [95.5, 484.0], [95.6, 485.0], [95.7, 487.0], [95.8, 489.0], [95.9, 492.0], [96.0, 495.0], [96.1, 497.0], [96.2, 498.0], [96.3, 500.0], [96.4, 502.0], [96.5, 503.0], [96.6, 505.0], [96.7, 507.0], [96.8, 509.0], [96.9, 510.0], [97.0, 513.0], [97.1, 515.0], [97.2, 517.0], [97.3, 518.0], [97.4, 522.0], [97.5, 524.0], [97.6, 527.0], [97.7, 528.0], [97.8, 531.0], [97.9, 534.0], [98.0, 537.0], [98.1, 541.0], [98.2, 544.0], [98.3, 547.0], [98.4, 552.0], [98.5, 557.0], [98.6, 561.0], [98.7, 566.0], [98.8, 572.0], [98.9, 574.0], [99.0, 580.0], [99.1, 587.0], [99.2, 594.0], [99.3, 601.0], [99.4, 611.0], [99.5, 620.0], [99.6, 629.0], [99.7, 643.0], [99.8, 678.0], [99.9, 734.0]], "isOverall": false, "label": "Purchase", "isController": false}, {"data": [[0.0, 23.0], [0.1, 249.0], [0.2, 251.0], [0.3, 251.0], [0.4, 252.0], [0.5, 252.0], [0.6, 253.0], [0.7, 253.0], [0.8, 254.0], [0.9, 254.0], [1.0, 254.0], [1.1, 254.0], [1.2, 254.0], [1.3, 255.0], [1.4, 255.0], [1.5, 255.0], [1.6, 255.0], [1.7, 256.0], [1.8, 256.0], [1.9, 256.0], [2.0, 256.0], [2.1, 256.0], [2.2, 257.0], [2.3, 257.0], [2.4, 257.0], [2.5, 257.0], [2.6, 257.0], [2.7, 257.0], [2.8, 258.0], [2.9, 258.0], [3.0, 258.0], [3.1, 258.0], [3.2, 258.0], [3.3, 258.0], [3.4, 259.0], [3.5, 259.0], [3.6, 259.0], [3.7, 259.0], [3.8, 259.0], [3.9, 259.0], [4.0, 259.0], [4.1, 260.0], [4.2, 260.0], [4.3, 260.0], [4.4, 260.0], [4.5, 260.0], [4.6, 260.0], [4.7, 260.0], [4.8, 260.0], [4.9, 260.0], [5.0, 261.0], [5.1, 261.0], [5.2, 261.0], [5.3, 261.0], [5.4, 261.0], [5.5, 261.0], [5.6, 261.0], [5.7, 261.0], [5.8, 261.0], [5.9, 261.0], [6.0, 261.0], [6.1, 262.0], [6.2, 262.0], [6.3, 262.0], [6.4, 262.0], [6.5, 262.0], [6.6, 262.0], [6.7, 262.0], [6.8, 262.0], [6.9, 262.0], [7.0, 262.0], [7.1, 262.0], [7.2, 263.0], [7.3, 263.0], [7.4, 263.0], [7.5, 263.0], [7.6, 263.0], [7.7, 263.0], [7.8, 263.0], [7.9, 263.0], [8.0, 263.0], [8.1, 263.0], [8.2, 263.0], [8.3, 263.0], [8.4, 264.0], [8.5, 264.0], [8.6, 264.0], [8.7, 264.0], [8.8, 264.0], [8.9, 264.0], [9.0, 264.0], [9.1, 264.0], [9.2, 264.0], [9.3, 264.0], [9.4, 264.0], [9.5, 265.0], [9.6, 265.0], [9.7, 265.0], [9.8, 265.0], [9.9, 265.0], [10.0, 265.0], [10.1, 265.0], [10.2, 265.0], [10.3, 265.0], [10.4, 265.0], [10.5, 265.0], [10.6, 266.0], [10.7, 266.0], [10.8, 266.0], [10.9, 266.0], [11.0, 266.0], [11.1, 266.0], [11.2, 266.0], [11.3, 266.0], [11.4, 266.0], [11.5, 266.0], [11.6, 266.0], [11.7, 266.0], [11.8, 266.0], [11.9, 266.0], [12.0, 267.0], [12.1, 267.0], [12.2, 267.0], [12.3, 267.0], [12.4, 267.0], [12.5, 267.0], [12.6, 267.0], [12.7, 267.0], [12.8, 267.0], [12.9, 267.0], [13.0, 267.0], [13.1, 267.0], [13.2, 268.0], [13.3, 268.0], [13.4, 268.0], [13.5, 268.0], [13.6, 268.0], [13.7, 268.0], [13.8, 268.0], [13.9, 268.0], [14.0, 268.0], [14.1, 268.0], [14.2, 268.0], [14.3, 269.0], [14.4, 269.0], [14.5, 269.0], [14.6, 269.0], [14.7, 269.0], [14.8, 269.0], [14.9, 269.0], [15.0, 269.0], [15.1, 269.0], [15.2, 269.0], [15.3, 269.0], [15.4, 269.0], [15.5, 269.0], [15.6, 269.0], [15.7, 269.0], [15.8, 270.0], [15.9, 270.0], [16.0, 270.0], [16.1, 270.0], [16.2, 270.0], [16.3, 270.0], [16.4, 270.0], [16.5, 270.0], [16.6, 270.0], [16.7, 270.0], [16.8, 270.0], [16.9, 270.0], [17.0, 270.0], [17.1, 270.0], [17.2, 271.0], [17.3, 271.0], [17.4, 271.0], [17.5, 271.0], [17.6, 271.0], [17.7, 271.0], [17.8, 271.0], [17.9, 271.0], [18.0, 271.0], [18.1, 271.0], [18.2, 271.0], [18.3, 271.0], [18.4, 271.0], [18.5, 272.0], [18.6, 272.0], [18.7, 272.0], [18.8, 272.0], [18.9, 272.0], [19.0, 272.0], [19.1, 272.0], [19.2, 272.0], [19.3, 272.0], [19.4, 272.0], [19.5, 272.0], [19.6, 272.0], [19.7, 272.0], [19.8, 273.0], [19.9, 273.0], [20.0, 273.0], [20.1, 273.0], [20.2, 273.0], [20.3, 273.0], [20.4, 273.0], [20.5, 273.0], [20.6, 273.0], [20.7, 273.0], [20.8, 273.0], [20.9, 273.0], [21.0, 273.0], [21.1, 274.0], [21.2, 274.0], [21.3, 274.0], [21.4, 274.0], [21.5, 274.0], [21.6, 274.0], [21.7, 274.0], [21.8, 274.0], [21.9, 274.0], [22.0, 274.0], [22.1, 274.0], [22.2, 274.0], [22.3, 275.0], [22.4, 275.0], [22.5, 275.0], [22.6, 275.0], [22.7, 275.0], [22.8, 275.0], [22.9, 275.0], [23.0, 275.0], [23.1, 275.0], [23.2, 275.0], [23.3, 275.0], [23.4, 275.0], [23.5, 276.0], [23.6, 276.0], [23.7, 276.0], [23.8, 276.0], [23.9, 276.0], [24.0, 276.0], [24.1, 276.0], [24.2, 276.0], [24.3, 276.0], [24.4, 276.0], [24.5, 276.0], [24.6, 277.0], [24.7, 277.0], [24.8, 277.0], [24.9, 277.0], [25.0, 277.0], [25.1, 277.0], [25.2, 277.0], [25.3, 277.0], [25.4, 277.0], [25.5, 277.0], [25.6, 278.0], [25.7, 278.0], [25.8, 278.0], [25.9, 278.0], [26.0, 278.0], [26.1, 278.0], [26.2, 278.0], [26.3, 278.0], [26.4, 278.0], [26.5, 278.0], [26.6, 278.0], [26.7, 279.0], [26.8, 279.0], [26.9, 279.0], [27.0, 279.0], [27.1, 279.0], [27.2, 279.0], [27.3, 279.0], [27.4, 279.0], [27.5, 279.0], [27.6, 279.0], [27.7, 279.0], [27.8, 279.0], [27.9, 279.0], [28.0, 279.0], [28.1, 280.0], [28.2, 280.0], [28.3, 280.0], [28.4, 280.0], [28.5, 280.0], [28.6, 280.0], [28.7, 280.0], [28.8, 280.0], [28.9, 280.0], [29.0, 281.0], [29.1, 281.0], [29.2, 281.0], [29.3, 281.0], [29.4, 281.0], [29.5, 281.0], [29.6, 281.0], [29.7, 281.0], [29.8, 281.0], [29.9, 282.0], [30.0, 282.0], [30.1, 282.0], [30.2, 282.0], [30.3, 282.0], [30.4, 282.0], [30.5, 282.0], [30.6, 282.0], [30.7, 282.0], [30.8, 282.0], [30.9, 283.0], [31.0, 283.0], [31.1, 283.0], [31.2, 283.0], [31.3, 283.0], [31.4, 283.0], [31.5, 283.0], [31.6, 283.0], [31.7, 283.0], [31.8, 283.0], [31.9, 284.0], [32.0, 284.0], [32.1, 284.0], [32.2, 284.0], [32.3, 284.0], [32.4, 284.0], [32.5, 284.0], [32.6, 284.0], [32.7, 284.0], [32.8, 284.0], [32.9, 285.0], [33.0, 285.0], [33.1, 285.0], [33.2, 285.0], [33.3, 285.0], [33.4, 285.0], [33.5, 285.0], [33.6, 285.0], [33.7, 285.0], [33.8, 286.0], [33.9, 286.0], [34.0, 286.0], [34.1, 286.0], [34.2, 286.0], [34.3, 286.0], [34.4, 286.0], [34.5, 286.0], [34.6, 287.0], [34.7, 287.0], [34.8, 287.0], [34.9, 287.0], [35.0, 287.0], [35.1, 287.0], [35.2, 287.0], [35.3, 287.0], [35.4, 288.0], [35.5, 288.0], [35.6, 288.0], [35.7, 288.0], [35.8, 288.0], [35.9, 288.0], [36.0, 288.0], [36.1, 288.0], [36.2, 289.0], [36.3, 289.0], [36.4, 289.0], [36.5, 289.0], [36.6, 289.0], [36.7, 289.0], [36.8, 289.0], [36.9, 290.0], [37.0, 290.0], [37.1, 290.0], [37.2, 290.0], [37.3, 290.0], [37.4, 290.0], [37.5, 290.0], [37.6, 290.0], [37.7, 291.0], [37.8, 291.0], [37.9, 291.0], [38.0, 291.0], [38.1, 291.0], [38.2, 291.0], [38.3, 291.0], [38.4, 292.0], [38.5, 292.0], [38.6, 292.0], [38.7, 292.0], [38.8, 292.0], [38.9, 292.0], [39.0, 292.0], [39.1, 292.0], [39.2, 293.0], [39.3, 293.0], [39.4, 293.0], [39.5, 293.0], [39.6, 293.0], [39.7, 293.0], [39.8, 293.0], [39.9, 293.0], [40.0, 294.0], [40.1, 294.0], [40.2, 294.0], [40.3, 294.0], [40.4, 294.0], [40.5, 294.0], [40.6, 294.0], [40.7, 294.0], [40.8, 295.0], [40.9, 295.0], [41.0, 295.0], [41.1, 295.0], [41.2, 295.0], [41.3, 295.0], [41.4, 295.0], [41.5, 296.0], [41.6, 296.0], [41.7, 296.0], [41.8, 296.0], [41.9, 296.0], [42.0, 296.0], [42.1, 296.0], [42.2, 296.0], [42.3, 297.0], [42.4, 297.0], [42.5, 297.0], [42.6, 297.0], [42.7, 297.0], [42.8, 297.0], [42.9, 297.0], [43.0, 298.0], [43.1, 298.0], [43.2, 298.0], [43.3, 298.0], [43.4, 298.0], [43.5, 298.0], [43.6, 298.0], [43.7, 299.0], [43.8, 299.0], [43.9, 299.0], [44.0, 299.0], [44.1, 299.0], [44.2, 299.0], [44.3, 300.0], [44.4, 300.0], [44.5, 300.0], [44.6, 300.0], [44.7, 300.0], [44.8, 300.0], [44.9, 300.0], [45.0, 301.0], [45.1, 301.0], [45.2, 301.0], [45.3, 301.0], [45.4, 301.0], [45.5, 301.0], [45.6, 301.0], [45.7, 302.0], [45.8, 302.0], [45.9, 302.0], [46.0, 302.0], [46.1, 302.0], [46.2, 302.0], [46.3, 302.0], [46.4, 303.0], [46.5, 303.0], [46.6, 303.0], [46.7, 303.0], [46.8, 303.0], [46.9, 304.0], [47.0, 304.0], [47.1, 304.0], [47.2, 304.0], [47.3, 304.0], [47.4, 304.0], [47.5, 304.0], [47.6, 305.0], [47.7, 305.0], [47.8, 305.0], [47.9, 305.0], [48.0, 305.0], [48.1, 305.0], [48.2, 306.0], [48.3, 306.0], [48.4, 306.0], [48.5, 306.0], [48.6, 306.0], [48.7, 307.0], [48.8, 307.0], [48.9, 307.0], [49.0, 307.0], [49.1, 307.0], [49.2, 308.0], [49.3, 308.0], [49.4, 308.0], [49.5, 308.0], [49.6, 308.0], [49.7, 308.0], [49.8, 308.0], [49.9, 309.0], [50.0, 309.0], [50.1, 309.0], [50.2, 309.0], [50.3, 309.0], [50.4, 310.0], [50.5, 310.0], [50.6, 310.0], [50.7, 310.0], [50.8, 310.0], [50.9, 310.0], [51.0, 310.0], [51.1, 311.0], [51.2, 311.0], [51.3, 311.0], [51.4, 311.0], [51.5, 311.0], [51.6, 311.0], [51.7, 312.0], [51.8, 312.0], [51.9, 312.0], [52.0, 312.0], [52.1, 312.0], [52.2, 312.0], [52.3, 313.0], [52.4, 313.0], [52.5, 313.0], [52.6, 313.0], [52.7, 313.0], [52.8, 313.0], [52.9, 314.0], [53.0, 314.0], [53.1, 314.0], [53.2, 314.0], [53.3, 314.0], [53.4, 314.0], [53.5, 315.0], [53.6, 315.0], [53.7, 315.0], [53.8, 315.0], [53.9, 315.0], [54.0, 316.0], [54.1, 316.0], [54.2, 316.0], [54.3, 316.0], [54.4, 316.0], [54.5, 316.0], [54.6, 317.0], [54.7, 317.0], [54.8, 317.0], [54.9, 317.0], [55.0, 317.0], [55.1, 317.0], [55.2, 317.0], [55.3, 318.0], [55.4, 318.0], [55.5, 318.0], [55.6, 318.0], [55.7, 319.0], [55.8, 319.0], [55.9, 319.0], [56.0, 319.0], [56.1, 319.0], [56.2, 320.0], [56.3, 320.0], [56.4, 320.0], [56.5, 320.0], [56.6, 320.0], [56.7, 320.0], [56.8, 320.0], [56.9, 321.0], [57.0, 321.0], [57.1, 321.0], [57.2, 321.0], [57.3, 321.0], [57.4, 322.0], [57.5, 322.0], [57.6, 322.0], [57.7, 322.0], [57.8, 322.0], [57.9, 322.0], [58.0, 323.0], [58.1, 323.0], [58.2, 323.0], [58.3, 323.0], [58.4, 323.0], [58.5, 324.0], [58.6, 324.0], [58.7, 324.0], [58.8, 324.0], [58.9, 324.0], [59.0, 325.0], [59.1, 325.0], [59.2, 325.0], [59.3, 325.0], [59.4, 325.0], [59.5, 326.0], [59.6, 326.0], [59.7, 326.0], [59.8, 326.0], [59.9, 327.0], [60.0, 327.0], [60.1, 327.0], [60.2, 327.0], [60.3, 327.0], [60.4, 328.0], [60.5, 328.0], [60.6, 328.0], [60.7, 328.0], [60.8, 329.0], [60.9, 329.0], [61.0, 329.0], [61.1, 329.0], [61.2, 330.0], [61.3, 330.0], [61.4, 330.0], [61.5, 330.0], [61.6, 331.0], [61.7, 331.0], [61.8, 331.0], [61.9, 332.0], [62.0, 332.0], [62.1, 332.0], [62.2, 332.0], [62.3, 332.0], [62.4, 333.0], [62.5, 333.0], [62.6, 333.0], [62.7, 333.0], [62.8, 333.0], [62.9, 334.0], [63.0, 334.0], [63.1, 334.0], [63.2, 334.0], [63.3, 335.0], [63.4, 335.0], [63.5, 335.0], [63.6, 335.0], [63.7, 336.0], [63.8, 336.0], [63.9, 336.0], [64.0, 336.0], [64.1, 337.0], [64.2, 337.0], [64.3, 337.0], [64.4, 337.0], [64.5, 337.0], [64.6, 338.0], [64.7, 338.0], [64.8, 338.0], [64.9, 338.0], [65.0, 339.0], [65.1, 339.0], [65.2, 339.0], [65.3, 339.0], [65.4, 340.0], [65.5, 340.0], [65.6, 340.0], [65.7, 341.0], [65.8, 341.0], [65.9, 341.0], [66.0, 341.0], [66.1, 341.0], [66.2, 342.0], [66.3, 342.0], [66.4, 342.0], [66.5, 342.0], [66.6, 343.0], [66.7, 343.0], [66.8, 343.0], [66.9, 344.0], [67.0, 344.0], [67.1, 344.0], [67.2, 344.0], [67.3, 345.0], [67.4, 345.0], [67.5, 345.0], [67.6, 346.0], [67.7, 346.0], [67.8, 346.0], [67.9, 346.0], [68.0, 346.0], [68.1, 346.0], [68.2, 347.0], [68.3, 347.0], [68.4, 347.0], [68.5, 348.0], [68.6, 348.0], [68.7, 348.0], [68.8, 349.0], [68.9, 349.0], [69.0, 349.0], [69.1, 349.0], [69.2, 350.0], [69.3, 350.0], [69.4, 350.0], [69.5, 350.0], [69.6, 350.0], [69.7, 351.0], [69.8, 351.0], [69.9, 351.0], [70.0, 352.0], [70.1, 352.0], [70.2, 352.0], [70.3, 353.0], [70.4, 353.0], [70.5, 353.0], [70.6, 354.0], [70.7, 354.0], [70.8, 354.0], [70.9, 354.0], [71.0, 355.0], [71.1, 355.0], [71.2, 355.0], [71.3, 356.0], [71.4, 356.0], [71.5, 356.0], [71.6, 356.0], [71.7, 357.0], [71.8, 357.0], [71.9, 357.0], [72.0, 357.0], [72.1, 358.0], [72.2, 358.0], [72.3, 358.0], [72.4, 358.0], [72.5, 359.0], [72.6, 359.0], [72.7, 359.0], [72.8, 360.0], [72.9, 360.0], [73.0, 361.0], [73.1, 361.0], [73.2, 361.0], [73.3, 362.0], [73.4, 362.0], [73.5, 362.0], [73.6, 363.0], [73.7, 363.0], [73.8, 363.0], [73.9, 364.0], [74.0, 364.0], [74.1, 364.0], [74.2, 364.0], [74.3, 364.0], [74.4, 365.0], [74.5, 365.0], [74.6, 366.0], [74.7, 366.0], [74.8, 366.0], [74.9, 367.0], [75.0, 367.0], [75.1, 368.0], [75.2, 368.0], [75.3, 368.0], [75.4, 368.0], [75.5, 369.0], [75.6, 369.0], [75.7, 369.0], [75.8, 370.0], [75.9, 370.0], [76.0, 370.0], [76.1, 371.0], [76.2, 371.0], [76.3, 371.0], [76.4, 372.0], [76.5, 372.0], [76.6, 372.0], [76.7, 373.0], [76.8, 373.0], [76.9, 373.0], [77.0, 373.0], [77.1, 374.0], [77.2, 374.0], [77.3, 375.0], [77.4, 375.0], [77.5, 375.0], [77.6, 376.0], [77.7, 376.0], [77.8, 377.0], [77.9, 377.0], [78.0, 377.0], [78.1, 378.0], [78.2, 378.0], [78.3, 378.0], [78.4, 379.0], [78.5, 379.0], [78.6, 379.0], [78.7, 379.0], [78.8, 380.0], [78.9, 380.0], [79.0, 381.0], [79.1, 381.0], [79.2, 382.0], [79.3, 382.0], [79.4, 383.0], [79.5, 383.0], [79.6, 383.0], [79.7, 383.0], [79.8, 384.0], [79.9, 384.0], [80.0, 384.0], [80.1, 385.0], [80.2, 385.0], [80.3, 385.0], [80.4, 386.0], [80.5, 386.0], [80.6, 387.0], [80.7, 387.0], [80.8, 387.0], [80.9, 388.0], [81.0, 388.0], [81.1, 389.0], [81.2, 389.0], [81.3, 390.0], [81.4, 390.0], [81.5, 390.0], [81.6, 391.0], [81.7, 391.0], [81.8, 391.0], [81.9, 392.0], [82.0, 392.0], [82.1, 393.0], [82.2, 393.0], [82.3, 393.0], [82.4, 394.0], [82.5, 394.0], [82.6, 394.0], [82.7, 395.0], [82.8, 395.0], [82.9, 396.0], [83.0, 396.0], [83.1, 396.0], [83.2, 397.0], [83.3, 397.0], [83.4, 397.0], [83.5, 398.0], [83.6, 398.0], [83.7, 399.0], [83.8, 399.0], [83.9, 399.0], [84.0, 400.0], [84.1, 400.0], [84.2, 401.0], [84.3, 401.0], [84.4, 402.0], [84.5, 402.0], [84.6, 402.0], [84.7, 403.0], [84.8, 403.0], [84.9, 404.0], [85.0, 404.0], [85.1, 404.0], [85.2, 405.0], [85.3, 405.0], [85.4, 405.0], [85.5, 406.0], [85.6, 407.0], [85.7, 407.0], [85.8, 407.0], [85.9, 408.0], [86.0, 408.0], [86.1, 409.0], [86.2, 409.0], [86.3, 410.0], [86.4, 410.0], [86.5, 410.0], [86.6, 411.0], [86.7, 411.0], [86.8, 411.0], [86.9, 412.0], [87.0, 412.0], [87.1, 413.0], [87.2, 413.0], [87.3, 414.0], [87.4, 414.0], [87.5, 414.0], [87.6, 415.0], [87.7, 415.0], [87.8, 416.0], [87.9, 416.0], [88.0, 416.0], [88.1, 417.0], [88.2, 418.0], [88.3, 418.0], [88.4, 418.0], [88.5, 419.0], [88.6, 419.0], [88.7, 420.0], [88.8, 421.0], [88.9, 421.0], [89.0, 422.0], [89.1, 423.0], [89.2, 423.0], [89.3, 424.0], [89.4, 424.0], [89.5, 425.0], [89.6, 426.0], [89.7, 427.0], [89.8, 427.0], [89.9, 428.0], [90.0, 429.0], [90.1, 429.0], [90.2, 430.0], [90.3, 430.0], [90.4, 431.0], [90.5, 432.0], [90.6, 432.0], [90.7, 433.0], [90.8, 434.0], [90.9, 435.0], [91.0, 435.0], [91.1, 436.0], [91.2, 437.0], [91.3, 437.0], [91.4, 438.0], [91.5, 439.0], [91.6, 440.0], [91.7, 440.0], [91.8, 442.0], [91.9, 442.0], [92.0, 443.0], [92.1, 444.0], [92.2, 444.0], [92.3, 445.0], [92.4, 446.0], [92.5, 447.0], [92.6, 447.0], [92.7, 448.0], [92.8, 449.0], [92.9, 450.0], [93.0, 451.0], [93.1, 452.0], [93.2, 452.0], [93.3, 454.0], [93.4, 454.0], [93.5, 456.0], [93.6, 457.0], [93.7, 458.0], [93.8, 459.0], [93.9, 460.0], [94.0, 461.0], [94.1, 463.0], [94.2, 464.0], [94.3, 466.0], [94.4, 467.0], [94.5, 468.0], [94.6, 469.0], [94.7, 470.0], [94.8, 470.0], [94.9, 472.0], [95.0, 473.0], [95.1, 474.0], [95.2, 476.0], [95.3, 476.0], [95.4, 479.0], [95.5, 481.0], [95.6, 482.0], [95.7, 484.0], [95.8, 485.0], [95.9, 487.0], [96.0, 488.0], [96.1, 490.0], [96.2, 491.0], [96.3, 493.0], [96.4, 495.0], [96.5, 497.0], [96.6, 499.0], [96.7, 500.0], [96.8, 502.0], [96.9, 504.0], [97.0, 508.0], [97.1, 509.0], [97.2, 512.0], [97.3, 512.0], [97.4, 514.0], [97.5, 516.0], [97.6, 518.0], [97.7, 521.0], [97.8, 525.0], [97.9, 528.0], [98.0, 533.0], [98.1, 536.0], [98.2, 539.0], [98.3, 545.0], [98.4, 547.0], [98.5, 549.0], [98.6, 555.0], [98.7, 558.0], [98.8, 562.0], [98.9, 568.0], [99.0, 573.0], [99.1, 583.0], [99.2, 593.0], [99.3, 602.0], [99.4, 611.0], [99.5, 624.0], [99.6, 639.0], [99.7, 659.0], [99.8, 686.0], [99.9, 734.0]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[0.0, 252.0], [0.1, 256.0], [0.2, 257.0], [0.3, 258.0], [0.4, 258.0], [0.5, 259.0], [0.6, 259.0], [0.7, 259.0], [0.8, 260.0], [0.9, 260.0], [1.0, 260.0], [1.1, 261.0], [1.2, 261.0], [1.3, 261.0], [1.4, 262.0], [1.5, 262.0], [1.6, 262.0], [1.7, 262.0], [1.8, 262.0], [1.9, 263.0], [2.0, 263.0], [2.1, 263.0], [2.2, 263.0], [2.3, 263.0], [2.4, 263.0], [2.5, 263.0], [2.6, 264.0], [2.7, 264.0], [2.8, 264.0], [2.9, 264.0], [3.0, 264.0], [3.1, 264.0], [3.2, 264.0], [3.3, 265.0], [3.4, 265.0], [3.5, 265.0], [3.6, 265.0], [3.7, 265.0], [3.8, 265.0], [3.9, 265.0], [4.0, 266.0], [4.1, 266.0], [4.2, 266.0], [4.3, 266.0], [4.4, 266.0], [4.5, 266.0], [4.6, 266.0], [4.7, 266.0], [4.8, 266.0], [4.9, 267.0], [5.0, 267.0], [5.1, 267.0], [5.2, 267.0], [5.3, 267.0], [5.4, 267.0], [5.5, 267.0], [5.6, 267.0], [5.7, 267.0], [5.8, 268.0], [5.9, 268.0], [6.0, 268.0], [6.1, 268.0], [6.2, 268.0], [6.3, 268.0], [6.4, 268.0], [6.5, 268.0], [6.6, 268.0], [6.7, 268.0], [6.8, 268.0], [6.9, 269.0], [7.0, 269.0], [7.1, 269.0], [7.2, 269.0], [7.3, 269.0], [7.4, 269.0], [7.5, 269.0], [7.6, 269.0], [7.7, 269.0], [7.8, 269.0], [7.9, 269.0], [8.0, 270.0], [8.1, 270.0], [8.2, 270.0], [8.3, 270.0], [8.4, 270.0], [8.5, 270.0], [8.6, 270.0], [8.7, 270.0], [8.8, 270.0], [8.9, 270.0], [9.0, 270.0], [9.1, 270.0], [9.2, 270.0], [9.3, 271.0], [9.4, 271.0], [9.5, 271.0], [9.6, 271.0], [9.7, 271.0], [9.8, 271.0], [9.9, 271.0], [10.0, 271.0], [10.1, 271.0], [10.2, 271.0], [10.3, 271.0], [10.4, 271.0], [10.5, 272.0], [10.6, 272.0], [10.7, 272.0], [10.8, 272.0], [10.9, 272.0], [11.0, 272.0], [11.1, 272.0], [11.2, 272.0], [11.3, 272.0], [11.4, 272.0], [11.5, 272.0], [11.6, 272.0], [11.7, 273.0], [11.8, 273.0], [11.9, 273.0], [12.0, 273.0], [12.1, 273.0], [12.2, 273.0], [12.3, 273.0], [12.4, 273.0], [12.5, 273.0], [12.6, 273.0], [12.7, 273.0], [12.8, 273.0], [12.9, 274.0], [13.0, 274.0], [13.1, 274.0], [13.2, 274.0], [13.3, 274.0], [13.4, 274.0], [13.5, 274.0], [13.6, 274.0], [13.7, 274.0], [13.8, 274.0], [13.9, 274.0], [14.0, 274.0], [14.1, 274.0], [14.2, 274.0], [14.3, 274.0], [14.4, 275.0], [14.5, 275.0], [14.6, 275.0], [14.7, 275.0], [14.8, 275.0], [14.9, 275.0], [15.0, 275.0], [15.1, 275.0], [15.2, 275.0], [15.3, 275.0], [15.4, 275.0], [15.5, 275.0], [15.6, 275.0], [15.7, 276.0], [15.8, 276.0], [15.9, 276.0], [16.0, 276.0], [16.1, 276.0], [16.2, 276.0], [16.3, 276.0], [16.4, 276.0], [16.5, 276.0], [16.6, 276.0], [16.7, 276.0], [16.8, 276.0], [16.9, 276.0], [17.0, 277.0], [17.1, 277.0], [17.2, 277.0], [17.3, 277.0], [17.4, 277.0], [17.5, 277.0], [17.6, 277.0], [17.7, 277.0], [17.8, 277.0], [17.9, 277.0], [18.0, 277.0], [18.1, 277.0], [18.2, 277.0], [18.3, 278.0], [18.4, 278.0], [18.5, 278.0], [18.6, 278.0], [18.7, 278.0], [18.8, 278.0], [18.9, 278.0], [19.0, 278.0], [19.1, 278.0], [19.2, 278.0], [19.3, 278.0], [19.4, 278.0], [19.5, 278.0], [19.6, 278.0], [19.7, 279.0], [19.8, 279.0], [19.9, 279.0], [20.0, 279.0], [20.1, 279.0], [20.2, 279.0], [20.3, 279.0], [20.4, 279.0], [20.5, 279.0], [20.6, 279.0], [20.7, 279.0], [20.8, 279.0], [20.9, 279.0], [21.0, 279.0], [21.1, 280.0], [21.2, 280.0], [21.3, 280.0], [21.4, 280.0], [21.5, 280.0], [21.6, 280.0], [21.7, 280.0], [21.8, 280.0], [21.9, 280.0], [22.0, 280.0], [22.1, 280.0], [22.2, 280.0], [22.3, 281.0], [22.4, 281.0], [22.5, 281.0], [22.6, 281.0], [22.7, 281.0], [22.8, 281.0], [22.9, 281.0], [23.0, 281.0], [23.1, 281.0], [23.2, 281.0], [23.3, 281.0], [23.4, 281.0], [23.5, 281.0], [23.6, 282.0], [23.7, 282.0], [23.8, 282.0], [23.9, 282.0], [24.0, 282.0], [24.1, 282.0], [24.2, 282.0], [24.3, 282.0], [24.4, 282.0], [24.5, 282.0], [24.6, 282.0], [24.7, 283.0], [24.8, 283.0], [24.9, 283.0], [25.0, 283.0], [25.1, 283.0], [25.2, 283.0], [25.3, 283.0], [25.4, 283.0], [25.5, 283.0], [25.6, 283.0], [25.7, 283.0], [25.8, 284.0], [25.9, 284.0], [26.0, 284.0], [26.1, 284.0], [26.2, 284.0], [26.3, 284.0], [26.4, 284.0], [26.5, 284.0], [26.6, 284.0], [26.7, 285.0], [26.8, 285.0], [26.9, 285.0], [27.0, 285.0], [27.1, 285.0], [27.2, 285.0], [27.3, 285.0], [27.4, 285.0], [27.5, 285.0], [27.6, 285.0], [27.7, 285.0], [27.8, 285.0], [27.9, 285.0], [28.0, 285.0], [28.1, 285.0], [28.2, 286.0], [28.3, 286.0], [28.4, 286.0], [28.5, 286.0], [28.6, 286.0], [28.7, 286.0], [28.8, 286.0], [28.9, 286.0], [29.0, 286.0], [29.1, 287.0], [29.2, 287.0], [29.3, 287.0], [29.4, 287.0], [29.5, 287.0], [29.6, 287.0], [29.7, 287.0], [29.8, 287.0], [29.9, 287.0], [30.0, 287.0], [30.1, 287.0], [30.2, 288.0], [30.3, 288.0], [30.4, 288.0], [30.5, 288.0], [30.6, 288.0], [30.7, 288.0], [30.8, 288.0], [30.9, 288.0], [31.0, 288.0], [31.1, 288.0], [31.2, 289.0], [31.3, 289.0], [31.4, 289.0], [31.5, 289.0], [31.6, 289.0], [31.7, 289.0], [31.8, 289.0], [31.9, 289.0], [32.0, 289.0], [32.1, 289.0], [32.2, 290.0], [32.3, 290.0], [32.4, 290.0], [32.5, 290.0], [32.6, 290.0], [32.7, 290.0], [32.8, 290.0], [32.9, 290.0], [33.0, 291.0], [33.1, 291.0], [33.2, 291.0], [33.3, 291.0], [33.4, 291.0], [33.5, 291.0], [33.6, 291.0], [33.7, 291.0], [33.8, 291.0], [33.9, 292.0], [34.0, 292.0], [34.1, 292.0], [34.2, 292.0], [34.3, 292.0], [34.4, 292.0], [34.5, 292.0], [34.6, 292.0], [34.7, 293.0], [34.8, 293.0], [34.9, 293.0], [35.0, 293.0], [35.1, 293.0], [35.2, 293.0], [35.3, 293.0], [35.4, 293.0], [35.5, 294.0], [35.6, 294.0], [35.7, 294.0], [35.8, 294.0], [35.9, 294.0], [36.0, 294.0], [36.1, 294.0], [36.2, 294.0], [36.3, 294.0], [36.4, 295.0], [36.5, 295.0], [36.6, 295.0], [36.7, 295.0], [36.8, 295.0], [36.9, 295.0], [37.0, 295.0], [37.1, 295.0], [37.2, 296.0], [37.3, 296.0], [37.4, 296.0], [37.5, 296.0], [37.6, 296.0], [37.7, 296.0], [37.8, 296.0], [37.9, 297.0], [38.0, 297.0], [38.1, 297.0], [38.2, 297.0], [38.3, 297.0], [38.4, 297.0], [38.5, 297.0], [38.6, 297.0], [38.7, 298.0], [38.8, 298.0], [38.9, 298.0], [39.0, 298.0], [39.1, 298.0], [39.2, 298.0], [39.3, 298.0], [39.4, 298.0], [39.5, 298.0], [39.6, 299.0], [39.7, 299.0], [39.8, 299.0], [39.9, 299.0], [40.0, 299.0], [40.1, 299.0], [40.2, 299.0], [40.3, 300.0], [40.4, 300.0], [40.5, 300.0], [40.6, 300.0], [40.7, 300.0], [40.8, 300.0], [40.9, 300.0], [41.0, 300.0], [41.1, 301.0], [41.2, 301.0], [41.3, 301.0], [41.4, 301.0], [41.5, 301.0], [41.6, 301.0], [41.7, 301.0], [41.8, 301.0], [41.9, 302.0], [42.0, 302.0], [42.1, 302.0], [42.2, 302.0], [42.3, 302.0], [42.4, 302.0], [42.5, 302.0], [42.6, 303.0], [42.7, 303.0], [42.8, 303.0], [42.9, 303.0], [43.0, 303.0], [43.1, 303.0], [43.2, 304.0], [43.3, 304.0], [43.4, 304.0], [43.5, 304.0], [43.6, 304.0], [43.7, 304.0], [43.8, 304.0], [43.9, 305.0], [44.0, 305.0], [44.1, 305.0], [44.2, 305.0], [44.3, 305.0], [44.4, 305.0], [44.5, 305.0], [44.6, 306.0], [44.7, 306.0], [44.8, 306.0], [44.9, 306.0], [45.0, 306.0], [45.1, 306.0], [45.2, 307.0], [45.3, 307.0], [45.4, 307.0], [45.5, 307.0], [45.6, 307.0], [45.7, 307.0], [45.8, 308.0], [45.9, 308.0], [46.0, 308.0], [46.1, 308.0], [46.2, 308.0], [46.3, 308.0], [46.4, 308.0], [46.5, 308.0], [46.6, 309.0], [46.7, 309.0], [46.8, 309.0], [46.9, 309.0], [47.0, 309.0], [47.1, 309.0], [47.2, 310.0], [47.3, 310.0], [47.4, 310.0], [47.5, 310.0], [47.6, 310.0], [47.7, 310.0], [47.8, 311.0], [47.9, 311.0], [48.0, 311.0], [48.1, 311.0], [48.2, 311.0], [48.3, 311.0], [48.4, 311.0], [48.5, 311.0], [48.6, 312.0], [48.7, 312.0], [48.8, 312.0], [48.9, 312.0], [49.0, 312.0], [49.1, 312.0], [49.2, 312.0], [49.3, 313.0], [49.4, 313.0], [49.5, 313.0], [49.6, 313.0], [49.7, 313.0], [49.8, 313.0], [49.9, 313.0], [50.0, 314.0], [50.1, 314.0], [50.2, 314.0], [50.3, 314.0], [50.4, 314.0], [50.5, 315.0], [50.6, 315.0], [50.7, 315.0], [50.8, 315.0], [50.9, 315.0], [51.0, 315.0], [51.1, 316.0], [51.2, 316.0], [51.3, 316.0], [51.4, 316.0], [51.5, 316.0], [51.6, 316.0], [51.7, 316.0], [51.8, 317.0], [51.9, 317.0], [52.0, 317.0], [52.1, 317.0], [52.2, 317.0], [52.3, 317.0], [52.4, 318.0], [52.5, 318.0], [52.6, 318.0], [52.7, 318.0], [52.8, 318.0], [52.9, 318.0], [53.0, 319.0], [53.1, 319.0], [53.2, 319.0], [53.3, 319.0], [53.4, 319.0], [53.5, 319.0], [53.6, 320.0], [53.7, 320.0], [53.8, 320.0], [53.9, 320.0], [54.0, 320.0], [54.1, 321.0], [54.2, 321.0], [54.3, 321.0], [54.4, 321.0], [54.5, 321.0], [54.6, 321.0], [54.7, 321.0], [54.8, 321.0], [54.9, 321.0], [55.0, 322.0], [55.1, 322.0], [55.2, 322.0], [55.3, 322.0], [55.4, 323.0], [55.5, 323.0], [55.6, 323.0], [55.7, 323.0], [55.8, 323.0], [55.9, 324.0], [56.0, 324.0], [56.1, 324.0], [56.2, 324.0], [56.3, 324.0], [56.4, 325.0], [56.5, 325.0], [56.6, 325.0], [56.7, 325.0], [56.8, 325.0], [56.9, 325.0], [57.0, 325.0], [57.1, 326.0], [57.2, 326.0], [57.3, 326.0], [57.4, 326.0], [57.5, 326.0], [57.6, 327.0], [57.7, 327.0], [57.8, 327.0], [57.9, 327.0], [58.0, 327.0], [58.1, 327.0], [58.2, 328.0], [58.3, 328.0], [58.4, 328.0], [58.5, 328.0], [58.6, 329.0], [58.7, 329.0], [58.8, 329.0], [58.9, 329.0], [59.0, 330.0], [59.1, 330.0], [59.2, 330.0], [59.3, 330.0], [59.4, 330.0], [59.5, 330.0], [59.6, 331.0], [59.7, 331.0], [59.8, 331.0], [59.9, 331.0], [60.0, 331.0], [60.1, 332.0], [60.2, 332.0], [60.3, 332.0], [60.4, 332.0], [60.5, 333.0], [60.6, 333.0], [60.7, 333.0], [60.8, 333.0], [60.9, 333.0], [61.0, 334.0], [61.1, 334.0], [61.2, 334.0], [61.3, 334.0], [61.4, 334.0], [61.5, 335.0], [61.6, 335.0], [61.7, 335.0], [61.8, 335.0], [61.9, 335.0], [62.0, 335.0], [62.1, 336.0], [62.2, 336.0], [62.3, 336.0], [62.4, 336.0], [62.5, 337.0], [62.6, 337.0], [62.7, 337.0], [62.8, 337.0], [62.9, 337.0], [63.0, 337.0], [63.1, 338.0], [63.2, 338.0], [63.3, 338.0], [63.4, 338.0], [63.5, 338.0], [63.6, 339.0], [63.7, 339.0], [63.8, 339.0], [63.9, 339.0], [64.0, 339.0], [64.1, 339.0], [64.2, 340.0], [64.3, 340.0], [64.4, 340.0], [64.5, 340.0], [64.6, 341.0], [64.7, 341.0], [64.8, 341.0], [64.9, 341.0], [65.0, 342.0], [65.1, 342.0], [65.2, 342.0], [65.3, 342.0], [65.4, 342.0], [65.5, 343.0], [65.6, 343.0], [65.7, 343.0], [65.8, 343.0], [65.9, 343.0], [66.0, 344.0], [66.1, 344.0], [66.2, 344.0], [66.3, 345.0], [66.4, 345.0], [66.5, 345.0], [66.6, 346.0], [66.7, 346.0], [66.8, 346.0], [66.9, 346.0], [67.0, 347.0], [67.1, 347.0], [67.2, 347.0], [67.3, 347.0], [67.4, 347.0], [67.5, 347.0], [67.6, 348.0], [67.7, 348.0], [67.8, 348.0], [67.9, 349.0], [68.0, 349.0], [68.1, 349.0], [68.2, 349.0], [68.3, 350.0], [68.4, 350.0], [68.5, 351.0], [68.6, 351.0], [68.7, 351.0], [68.8, 352.0], [68.9, 352.0], [69.0, 352.0], [69.1, 352.0], [69.2, 353.0], [69.3, 353.0], [69.4, 353.0], [69.5, 353.0], [69.6, 354.0], [69.7, 354.0], [69.8, 354.0], [69.9, 355.0], [70.0, 355.0], [70.1, 355.0], [70.2, 356.0], [70.3, 356.0], [70.4, 356.0], [70.5, 356.0], [70.6, 357.0], [70.7, 357.0], [70.8, 357.0], [70.9, 357.0], [71.0, 358.0], [71.1, 358.0], [71.2, 358.0], [71.3, 359.0], [71.4, 359.0], [71.5, 359.0], [71.6, 359.0], [71.7, 359.0], [71.8, 359.0], [71.9, 360.0], [72.0, 360.0], [72.1, 360.0], [72.2, 360.0], [72.3, 361.0], [72.4, 361.0], [72.5, 361.0], [72.6, 361.0], [72.7, 362.0], [72.8, 362.0], [72.9, 362.0], [73.0, 363.0], [73.1, 363.0], [73.2, 363.0], [73.3, 364.0], [73.4, 364.0], [73.5, 364.0], [73.6, 365.0], [73.7, 365.0], [73.8, 365.0], [73.9, 366.0], [74.0, 366.0], [74.1, 366.0], [74.2, 366.0], [74.3, 367.0], [74.4, 367.0], [74.5, 367.0], [74.6, 367.0], [74.7, 368.0], [74.8, 368.0], [74.9, 368.0], [75.0, 369.0], [75.1, 369.0], [75.2, 369.0], [75.3, 370.0], [75.4, 370.0], [75.5, 370.0], [75.6, 371.0], [75.7, 371.0], [75.8, 371.0], [75.9, 372.0], [76.0, 372.0], [76.1, 373.0], [76.2, 373.0], [76.3, 373.0], [76.4, 373.0], [76.5, 374.0], [76.6, 374.0], [76.7, 375.0], [76.8, 375.0], [76.9, 375.0], [77.0, 376.0], [77.1, 376.0], [77.2, 376.0], [77.3, 376.0], [77.4, 377.0], [77.5, 377.0], [77.6, 377.0], [77.7, 378.0], [77.8, 378.0], [77.9, 379.0], [78.0, 379.0], [78.1, 379.0], [78.2, 380.0], [78.3, 380.0], [78.4, 380.0], [78.5, 381.0], [78.6, 381.0], [78.7, 382.0], [78.8, 382.0], [78.9, 382.0], [79.0, 382.0], [79.1, 383.0], [79.2, 383.0], [79.3, 383.0], [79.4, 383.0], [79.5, 384.0], [79.6, 384.0], [79.7, 385.0], [79.8, 385.0], [79.9, 386.0], [80.0, 386.0], [80.1, 387.0], [80.2, 387.0], [80.3, 387.0], [80.4, 388.0], [80.5, 388.0], [80.6, 389.0], [80.7, 389.0], [80.8, 389.0], [80.9, 389.0], [81.0, 390.0], [81.1, 390.0], [81.2, 391.0], [81.3, 391.0], [81.4, 391.0], [81.5, 392.0], [81.6, 392.0], [81.7, 393.0], [81.8, 393.0], [81.9, 393.0], [82.0, 394.0], [82.1, 394.0], [82.2, 394.0], [82.3, 395.0], [82.4, 395.0], [82.5, 396.0], [82.6, 396.0], [82.7, 396.0], [82.8, 396.0], [82.9, 397.0], [83.0, 397.0], [83.1, 398.0], [83.2, 398.0], [83.3, 398.0], [83.4, 398.0], [83.5, 399.0], [83.6, 399.0], [83.7, 400.0], [83.8, 400.0], [83.9, 400.0], [84.0, 401.0], [84.1, 401.0], [84.2, 402.0], [84.3, 402.0], [84.4, 402.0], [84.5, 403.0], [84.6, 403.0], [84.7, 404.0], [84.8, 404.0], [84.9, 404.0], [85.0, 405.0], [85.1, 405.0], [85.2, 406.0], [85.3, 406.0], [85.4, 407.0], [85.5, 407.0], [85.6, 408.0], [85.7, 408.0], [85.8, 409.0], [85.9, 409.0], [86.0, 410.0], [86.1, 410.0], [86.2, 410.0], [86.3, 411.0], [86.4, 412.0], [86.5, 412.0], [86.6, 413.0], [86.7, 413.0], [86.8, 414.0], [86.9, 414.0], [87.0, 415.0], [87.1, 415.0], [87.2, 416.0], [87.3, 416.0], [87.4, 417.0], [87.5, 417.0], [87.6, 418.0], [87.7, 418.0], [87.8, 419.0], [87.9, 420.0], [88.0, 420.0], [88.1, 421.0], [88.2, 422.0], [88.3, 422.0], [88.4, 423.0], [88.5, 423.0], [88.6, 424.0], [88.7, 425.0], [88.8, 425.0], [88.9, 426.0], [89.0, 426.0], [89.1, 427.0], [89.2, 427.0], [89.3, 428.0], [89.4, 428.0], [89.5, 429.0], [89.6, 430.0], [89.7, 430.0], [89.8, 431.0], [89.9, 432.0], [90.0, 433.0], [90.1, 433.0], [90.2, 434.0], [90.3, 434.0], [90.4, 436.0], [90.5, 437.0], [90.6, 437.0], [90.7, 438.0], [90.8, 439.0], [90.9, 440.0], [91.0, 440.0], [91.1, 441.0], [91.2, 441.0], [91.3, 442.0], [91.4, 443.0], [91.5, 444.0], [91.6, 445.0], [91.7, 445.0], [91.8, 446.0], [91.9, 447.0], [92.0, 448.0], [92.1, 449.0], [92.2, 449.0], [92.3, 450.0], [92.4, 451.0], [92.5, 452.0], [92.6, 453.0], [92.7, 454.0], [92.8, 455.0], [92.9, 455.0], [93.0, 456.0], [93.1, 457.0], [93.2, 458.0], [93.3, 459.0], [93.4, 460.0], [93.5, 460.0], [93.6, 462.0], [93.7, 463.0], [93.8, 463.0], [93.9, 464.0], [94.0, 465.0], [94.1, 467.0], [94.2, 468.0], [94.3, 469.0], [94.4, 470.0], [94.5, 471.0], [94.6, 473.0], [94.7, 474.0], [94.8, 475.0], [94.9, 477.0], [95.0, 479.0], [95.1, 480.0], [95.2, 481.0], [95.3, 482.0], [95.4, 483.0], [95.5, 484.0], [95.6, 485.0], [95.7, 487.0], [95.8, 489.0], [95.9, 490.0], [96.0, 491.0], [96.1, 492.0], [96.2, 494.0], [96.3, 496.0], [96.4, 497.0], [96.5, 500.0], [96.6, 501.0], [96.7, 503.0], [96.8, 505.0], [96.9, 507.0], [97.0, 509.0], [97.1, 511.0], [97.2, 512.0], [97.3, 513.0], [97.4, 516.0], [97.5, 518.0], [97.6, 520.0], [97.7, 523.0], [97.8, 528.0], [97.9, 530.0], [98.0, 534.0], [98.1, 537.0], [98.2, 542.0], [98.3, 544.0], [98.4, 547.0], [98.5, 553.0], [98.6, 556.0], [98.7, 561.0], [98.8, 565.0], [98.9, 569.0], [99.0, 576.0], [99.1, 583.0], [99.2, 590.0], [99.3, 601.0], [99.4, 610.0], [99.5, 620.0], [99.6, 626.0], [99.7, 644.0], [99.8, 669.0], [99.9, 715.0]], "isOverall": false, "label": "Confirmation", "isController": false}, {"data": [[0.0, 254.0], [0.1, 257.0], [0.2, 258.0], [0.3, 259.0], [0.4, 260.0], [0.5, 260.0], [0.6, 261.0], [0.7, 261.0], [0.8, 261.0], [0.9, 262.0], [1.0, 262.0], [1.1, 262.0], [1.2, 263.0], [1.3, 263.0], [1.4, 263.0], [1.5, 263.0], [1.6, 264.0], [1.7, 264.0], [1.8, 264.0], [1.9, 264.0], [2.0, 264.0], [2.1, 265.0], [2.2, 265.0], [2.3, 265.0], [2.4, 265.0], [2.5, 265.0], [2.6, 266.0], [2.7, 266.0], [2.8, 266.0], [2.9, 266.0], [3.0, 266.0], [3.1, 266.0], [3.2, 266.0], [3.3, 266.0], [3.4, 267.0], [3.5, 267.0], [3.6, 267.0], [3.7, 267.0], [3.8, 267.0], [3.9, 267.0], [4.0, 267.0], [4.1, 267.0], [4.2, 268.0], [4.3, 268.0], [4.4, 268.0], [4.5, 268.0], [4.6, 268.0], [4.7, 268.0], [4.8, 268.0], [4.9, 268.0], [5.0, 268.0], [5.1, 268.0], [5.2, 269.0], [5.3, 269.0], [5.4, 269.0], [5.5, 269.0], [5.6, 269.0], [5.7, 269.0], [5.8, 269.0], [5.9, 269.0], [6.0, 269.0], [6.1, 270.0], [6.2, 270.0], [6.3, 270.0], [6.4, 270.0], [6.5, 270.0], [6.6, 270.0], [6.7, 270.0], [6.8, 270.0], [6.9, 270.0], [7.0, 270.0], [7.1, 271.0], [7.2, 271.0], [7.3, 271.0], [7.4, 271.0], [7.5, 271.0], [7.6, 271.0], [7.7, 271.0], [7.8, 271.0], [7.9, 271.0], [8.0, 271.0], [8.1, 271.0], [8.2, 272.0], [8.3, 272.0], [8.4, 272.0], [8.5, 272.0], [8.6, 272.0], [8.7, 272.0], [8.8, 272.0], [8.9, 272.0], [9.0, 272.0], [9.1, 272.0], [9.2, 272.0], [9.3, 272.0], [9.4, 272.0], [9.5, 272.0], [9.6, 273.0], [9.7, 273.0], [9.8, 273.0], [9.9, 273.0], [10.0, 273.0], [10.1, 273.0], [10.2, 273.0], [10.3, 273.0], [10.4, 273.0], [10.5, 273.0], [10.6, 273.0], [10.7, 273.0], [10.8, 273.0], [10.9, 274.0], [11.0, 274.0], [11.1, 274.0], [11.2, 274.0], [11.3, 274.0], [11.4, 274.0], [11.5, 274.0], [11.6, 274.0], [11.7, 274.0], [11.8, 274.0], [11.9, 274.0], [12.0, 274.0], [12.1, 274.0], [12.2, 275.0], [12.3, 275.0], [12.4, 275.0], [12.5, 275.0], [12.6, 275.0], [12.7, 275.0], [12.8, 275.0], [12.9, 275.0], [13.0, 275.0], [13.1, 275.0], [13.2, 275.0], [13.3, 275.0], [13.4, 275.0], [13.5, 275.0], [13.6, 276.0], [13.7, 276.0], [13.8, 276.0], [13.9, 276.0], [14.0, 276.0], [14.1, 276.0], [14.2, 276.0], [14.3, 276.0], [14.4, 276.0], [14.5, 276.0], [14.6, 276.0], [14.7, 276.0], [14.8, 276.0], [14.9, 277.0], [15.0, 277.0], [15.1, 277.0], [15.2, 277.0], [15.3, 277.0], [15.4, 277.0], [15.5, 277.0], [15.6, 277.0], [15.7, 277.0], [15.8, 277.0], [15.9, 277.0], [16.0, 277.0], [16.1, 277.0], [16.2, 278.0], [16.3, 278.0], [16.4, 278.0], [16.5, 278.0], [16.6, 278.0], [16.7, 278.0], [16.8, 278.0], [16.9, 278.0], [17.0, 278.0], [17.1, 278.0], [17.2, 278.0], [17.3, 278.0], [17.4, 278.0], [17.5, 278.0], [17.6, 278.0], [17.7, 279.0], [17.8, 279.0], [17.9, 279.0], [18.0, 279.0], [18.1, 279.0], [18.2, 279.0], [18.3, 279.0], [18.4, 279.0], [18.5, 279.0], [18.6, 279.0], [18.7, 279.0], [18.8, 279.0], [18.9, 279.0], [19.0, 279.0], [19.1, 279.0], [19.2, 280.0], [19.3, 280.0], [19.4, 280.0], [19.5, 280.0], [19.6, 280.0], [19.7, 280.0], [19.8, 280.0], [19.9, 280.0], [20.0, 280.0], [20.1, 280.0], [20.2, 280.0], [20.3, 280.0], [20.4, 280.0], [20.5, 281.0], [20.6, 281.0], [20.7, 281.0], [20.8, 281.0], [20.9, 281.0], [21.0, 281.0], [21.1, 281.0], [21.2, 281.0], [21.3, 281.0], [21.4, 281.0], [21.5, 281.0], [21.6, 281.0], [21.7, 281.0], [21.8, 281.0], [21.9, 282.0], [22.0, 282.0], [22.1, 282.0], [22.2, 282.0], [22.3, 282.0], [22.4, 282.0], [22.5, 282.0], [22.6, 282.0], [22.7, 282.0], [22.8, 282.0], [22.9, 282.0], [23.0, 282.0], [23.1, 283.0], [23.2, 283.0], [23.3, 283.0], [23.4, 283.0], [23.5, 283.0], [23.6, 283.0], [23.7, 283.0], [23.8, 283.0], [23.9, 283.0], [24.0, 283.0], [24.1, 283.0], [24.2, 284.0], [24.3, 284.0], [24.4, 284.0], [24.5, 284.0], [24.6, 284.0], [24.7, 284.0], [24.8, 284.0], [24.9, 284.0], [25.0, 284.0], [25.1, 284.0], [25.2, 284.0], [25.3, 284.0], [25.4, 285.0], [25.5, 285.0], [25.6, 285.0], [25.7, 285.0], [25.8, 285.0], [25.9, 285.0], [26.0, 285.0], [26.1, 285.0], [26.2, 285.0], [26.3, 285.0], [26.4, 285.0], [26.5, 286.0], [26.6, 286.0], [26.7, 286.0], [26.8, 286.0], [26.9, 286.0], [27.0, 286.0], [27.1, 286.0], [27.2, 286.0], [27.3, 286.0], [27.4, 286.0], [27.5, 287.0], [27.6, 287.0], [27.7, 287.0], [27.8, 287.0], [27.9, 287.0], [28.0, 287.0], [28.1, 287.0], [28.2, 287.0], [28.3, 287.0], [28.4, 287.0], [28.5, 287.0], [28.6, 287.0], [28.7, 287.0], [28.8, 288.0], [28.9, 288.0], [29.0, 288.0], [29.1, 288.0], [29.2, 288.0], [29.3, 288.0], [29.4, 288.0], [29.5, 288.0], [29.6, 288.0], [29.7, 288.0], [29.8, 288.0], [29.9, 289.0], [30.0, 289.0], [30.1, 289.0], [30.2, 289.0], [30.3, 289.0], [30.4, 289.0], [30.5, 289.0], [30.6, 289.0], [30.7, 290.0], [30.8, 290.0], [30.9, 290.0], [31.0, 290.0], [31.1, 290.0], [31.2, 290.0], [31.3, 290.0], [31.4, 290.0], [31.5, 290.0], [31.6, 291.0], [31.7, 291.0], [31.8, 291.0], [31.9, 291.0], [32.0, 291.0], [32.1, 291.0], [32.2, 291.0], [32.3, 291.0], [32.4, 291.0], [32.5, 291.0], [32.6, 291.0], [32.7, 292.0], [32.8, 292.0], [32.9, 292.0], [33.0, 292.0], [33.1, 292.0], [33.2, 292.0], [33.3, 292.0], [33.4, 292.0], [33.5, 292.0], [33.6, 293.0], [33.7, 293.0], [33.8, 293.0], [33.9, 293.0], [34.0, 293.0], [34.1, 293.0], [34.2, 293.0], [34.3, 293.0], [34.4, 293.0], [34.5, 294.0], [34.6, 294.0], [34.7, 294.0], [34.8, 294.0], [34.9, 294.0], [35.0, 294.0], [35.1, 294.0], [35.2, 294.0], [35.3, 294.0], [35.4, 295.0], [35.5, 295.0], [35.6, 295.0], [35.7, 295.0], [35.8, 295.0], [35.9, 295.0], [36.0, 295.0], [36.1, 296.0], [36.2, 296.0], [36.3, 296.0], [36.4, 296.0], [36.5, 296.0], [36.6, 296.0], [36.7, 296.0], [36.8, 296.0], [36.9, 296.0], [37.0, 297.0], [37.1, 297.0], [37.2, 297.0], [37.3, 297.0], [37.4, 297.0], [37.5, 297.0], [37.6, 297.0], [37.7, 297.0], [37.8, 298.0], [37.9, 298.0], [38.0, 298.0], [38.1, 298.0], [38.2, 298.0], [38.3, 298.0], [38.4, 298.0], [38.5, 298.0], [38.6, 299.0], [38.7, 299.0], [38.8, 299.0], [38.9, 299.0], [39.0, 299.0], [39.1, 299.0], [39.2, 299.0], [39.3, 300.0], [39.4, 300.0], [39.5, 300.0], [39.6, 300.0], [39.7, 300.0], [39.8, 300.0], [39.9, 300.0], [40.0, 300.0], [40.1, 301.0], [40.2, 301.0], [40.3, 301.0], [40.4, 301.0], [40.5, 301.0], [40.6, 301.0], [40.7, 301.0], [40.8, 301.0], [40.9, 301.0], [41.0, 302.0], [41.1, 302.0], [41.2, 302.0], [41.3, 302.0], [41.4, 302.0], [41.5, 302.0], [41.6, 302.0], [41.7, 302.0], [41.8, 303.0], [41.9, 303.0], [42.0, 303.0], [42.1, 303.0], [42.2, 303.0], [42.3, 303.0], [42.4, 304.0], [42.5, 304.0], [42.6, 304.0], [42.7, 304.0], [42.8, 304.0], [42.9, 304.0], [43.0, 304.0], [43.1, 305.0], [43.2, 305.0], [43.3, 305.0], [43.4, 305.0], [43.5, 305.0], [43.6, 305.0], [43.7, 305.0], [43.8, 306.0], [43.9, 306.0], [44.0, 306.0], [44.1, 306.0], [44.2, 306.0], [44.3, 306.0], [44.4, 306.0], [44.5, 307.0], [44.6, 307.0], [44.7, 307.0], [44.8, 307.0], [44.9, 307.0], [45.0, 307.0], [45.1, 307.0], [45.2, 308.0], [45.3, 308.0], [45.4, 308.0], [45.5, 308.0], [45.6, 308.0], [45.7, 308.0], [45.8, 308.0], [45.9, 309.0], [46.0, 309.0], [46.1, 309.0], [46.2, 309.0], [46.3, 309.0], [46.4, 309.0], [46.5, 309.0], [46.6, 310.0], [46.7, 310.0], [46.8, 310.0], [46.9, 310.0], [47.0, 310.0], [47.1, 310.0], [47.2, 311.0], [47.3, 311.0], [47.4, 311.0], [47.5, 311.0], [47.6, 311.0], [47.7, 311.0], [47.8, 312.0], [47.9, 312.0], [48.0, 312.0], [48.1, 312.0], [48.2, 312.0], [48.3, 312.0], [48.4, 312.0], [48.5, 313.0], [48.6, 313.0], [48.7, 313.0], [48.8, 313.0], [48.9, 313.0], [49.0, 313.0], [49.1, 314.0], [49.2, 314.0], [49.3, 314.0], [49.4, 314.0], [49.5, 314.0], [49.6, 314.0], [49.7, 315.0], [49.8, 315.0], [49.9, 315.0], [50.0, 315.0], [50.1, 315.0], [50.2, 315.0], [50.3, 315.0], [50.4, 316.0], [50.5, 316.0], [50.6, 316.0], [50.7, 316.0], [50.8, 316.0], [50.9, 316.0], [51.0, 316.0], [51.1, 317.0], [51.2, 317.0], [51.3, 317.0], [51.4, 317.0], [51.5, 317.0], [51.6, 317.0], [51.7, 318.0], [51.8, 318.0], [51.9, 318.0], [52.0, 318.0], [52.1, 318.0], [52.2, 318.0], [52.3, 319.0], [52.4, 319.0], [52.5, 319.0], [52.6, 319.0], [52.7, 319.0], [52.8, 319.0], [52.9, 320.0], [53.0, 320.0], [53.1, 320.0], [53.2, 320.0], [53.3, 320.0], [53.4, 320.0], [53.5, 320.0], [53.6, 321.0], [53.7, 321.0], [53.8, 321.0], [53.9, 321.0], [54.0, 321.0], [54.1, 322.0], [54.2, 322.0], [54.3, 322.0], [54.4, 322.0], [54.5, 322.0], [54.6, 322.0], [54.7, 322.0], [54.8, 323.0], [54.9, 323.0], [55.0, 323.0], [55.1, 323.0], [55.2, 323.0], [55.3, 324.0], [55.4, 324.0], [55.5, 324.0], [55.6, 324.0], [55.7, 324.0], [55.8, 324.0], [55.9, 325.0], [56.0, 325.0], [56.1, 325.0], [56.2, 325.0], [56.3, 325.0], [56.4, 326.0], [56.5, 326.0], [56.6, 326.0], [56.7, 326.0], [56.8, 327.0], [56.9, 327.0], [57.0, 327.0], [57.1, 327.0], [57.2, 327.0], [57.3, 328.0], [57.4, 328.0], [57.5, 328.0], [57.6, 328.0], [57.7, 328.0], [57.8, 328.0], [57.9, 328.0], [58.0, 328.0], [58.1, 329.0], [58.2, 329.0], [58.3, 329.0], [58.4, 329.0], [58.5, 329.0], [58.6, 330.0], [58.7, 330.0], [58.8, 330.0], [58.9, 330.0], [59.0, 330.0], [59.1, 330.0], [59.2, 330.0], [59.3, 331.0], [59.4, 331.0], [59.5, 331.0], [59.6, 331.0], [59.7, 331.0], [59.8, 332.0], [59.9, 332.0], [60.0, 332.0], [60.1, 332.0], [60.2, 332.0], [60.3, 332.0], [60.4, 333.0], [60.5, 333.0], [60.6, 333.0], [60.7, 333.0], [60.8, 334.0], [60.9, 334.0], [61.0, 334.0], [61.1, 334.0], [61.2, 335.0], [61.3, 335.0], [61.4, 335.0], [61.5, 335.0], [61.6, 335.0], [61.7, 335.0], [61.8, 336.0], [61.9, 336.0], [62.0, 336.0], [62.1, 336.0], [62.2, 337.0], [62.3, 337.0], [62.4, 337.0], [62.5, 337.0], [62.6, 337.0], [62.7, 338.0], [62.8, 338.0], [62.9, 338.0], [63.0, 338.0], [63.1, 339.0], [63.2, 339.0], [63.3, 339.0], [63.4, 339.0], [63.5, 339.0], [63.6, 340.0], [63.7, 340.0], [63.8, 340.0], [63.9, 341.0], [64.0, 341.0], [64.1, 341.0], [64.2, 341.0], [64.3, 341.0], [64.4, 341.0], [64.5, 342.0], [64.6, 342.0], [64.7, 342.0], [64.8, 342.0], [64.9, 342.0], [65.0, 343.0], [65.1, 343.0], [65.2, 343.0], [65.3, 344.0], [65.4, 344.0], [65.5, 344.0], [65.6, 344.0], [65.7, 345.0], [65.8, 345.0], [65.9, 345.0], [66.0, 345.0], [66.1, 346.0], [66.2, 346.0], [66.3, 346.0], [66.4, 346.0], [66.5, 347.0], [66.6, 347.0], [66.7, 347.0], [66.8, 347.0], [66.9, 348.0], [67.0, 348.0], [67.1, 348.0], [67.2, 348.0], [67.3, 349.0], [67.4, 349.0], [67.5, 349.0], [67.6, 349.0], [67.7, 350.0], [67.8, 350.0], [67.9, 350.0], [68.0, 350.0], [68.1, 351.0], [68.2, 351.0], [68.3, 351.0], [68.4, 351.0], [68.5, 352.0], [68.6, 352.0], [68.7, 352.0], [68.8, 352.0], [68.9, 352.0], [69.0, 353.0], [69.1, 353.0], [69.2, 353.0], [69.3, 354.0], [69.4, 354.0], [69.5, 354.0], [69.6, 354.0], [69.7, 355.0], [69.8, 355.0], [69.9, 355.0], [70.0, 355.0], [70.1, 356.0], [70.2, 356.0], [70.3, 356.0], [70.4, 356.0], [70.5, 357.0], [70.6, 357.0], [70.7, 357.0], [70.8, 357.0], [70.9, 358.0], [71.0, 358.0], [71.1, 359.0], [71.2, 359.0], [71.3, 359.0], [71.4, 360.0], [71.5, 360.0], [71.6, 360.0], [71.7, 361.0], [71.8, 361.0], [71.9, 361.0], [72.0, 361.0], [72.1, 362.0], [72.2, 362.0], [72.3, 362.0], [72.4, 362.0], [72.5, 362.0], [72.6, 363.0], [72.7, 363.0], [72.8, 363.0], [72.9, 364.0], [73.0, 364.0], [73.1, 365.0], [73.2, 365.0], [73.3, 365.0], [73.4, 365.0], [73.5, 366.0], [73.6, 366.0], [73.7, 366.0], [73.8, 367.0], [73.9, 367.0], [74.0, 367.0], [74.1, 367.0], [74.2, 368.0], [74.3, 368.0], [74.4, 368.0], [74.5, 369.0], [74.6, 369.0], [74.7, 369.0], [74.8, 370.0], [74.9, 370.0], [75.0, 370.0], [75.1, 371.0], [75.2, 371.0], [75.3, 371.0], [75.4, 372.0], [75.5, 372.0], [75.6, 372.0], [75.7, 372.0], [75.8, 373.0], [75.9, 373.0], [76.0, 373.0], [76.1, 373.0], [76.2, 374.0], [76.3, 374.0], [76.4, 374.0], [76.5, 375.0], [76.6, 375.0], [76.7, 375.0], [76.8, 376.0], [76.9, 376.0], [77.0, 376.0], [77.1, 377.0], [77.2, 377.0], [77.3, 377.0], [77.4, 378.0], [77.5, 378.0], [77.6, 378.0], [77.7, 379.0], [77.8, 379.0], [77.9, 379.0], [78.0, 380.0], [78.1, 380.0], [78.2, 380.0], [78.3, 381.0], [78.4, 381.0], [78.5, 381.0], [78.6, 382.0], [78.7, 382.0], [78.8, 382.0], [78.9, 383.0], [79.0, 383.0], [79.1, 383.0], [79.2, 383.0], [79.3, 384.0], [79.4, 384.0], [79.5, 384.0], [79.6, 385.0], [79.7, 385.0], [79.8, 386.0], [79.9, 386.0], [80.0, 386.0], [80.1, 387.0], [80.2, 387.0], [80.3, 387.0], [80.4, 388.0], [80.5, 388.0], [80.6, 389.0], [80.7, 389.0], [80.8, 389.0], [80.9, 390.0], [81.0, 390.0], [81.1, 390.0], [81.2, 391.0], [81.3, 391.0], [81.4, 391.0], [81.5, 392.0], [81.6, 392.0], [81.7, 392.0], [81.8, 392.0], [81.9, 393.0], [82.0, 393.0], [82.1, 394.0], [82.2, 394.0], [82.3, 395.0], [82.4, 396.0], [82.5, 396.0], [82.6, 397.0], [82.7, 397.0], [82.8, 397.0], [82.9, 397.0], [83.0, 398.0], [83.1, 398.0], [83.2, 399.0], [83.3, 399.0], [83.4, 399.0], [83.5, 400.0], [83.6, 400.0], [83.7, 401.0], [83.8, 401.0], [83.9, 402.0], [84.0, 402.0], [84.1, 403.0], [84.2, 403.0], [84.3, 403.0], [84.4, 404.0], [84.5, 404.0], [84.6, 405.0], [84.7, 405.0], [84.8, 405.0], [84.9, 406.0], [85.0, 406.0], [85.1, 407.0], [85.2, 407.0], [85.3, 407.0], [85.4, 408.0], [85.5, 409.0], [85.6, 409.0], [85.7, 409.0], [85.8, 410.0], [85.9, 410.0], [86.0, 411.0], [86.1, 411.0], [86.2, 412.0], [86.3, 412.0], [86.4, 413.0], [86.5, 413.0], [86.6, 414.0], [86.7, 415.0], [86.8, 415.0], [86.9, 415.0], [87.0, 416.0], [87.1, 417.0], [87.2, 417.0], [87.3, 417.0], [87.4, 418.0], [87.5, 418.0], [87.6, 419.0], [87.7, 419.0], [87.8, 420.0], [87.9, 421.0], [88.0, 421.0], [88.1, 422.0], [88.2, 422.0], [88.3, 423.0], [88.4, 424.0], [88.5, 424.0], [88.6, 425.0], [88.7, 425.0], [88.8, 426.0], [88.9, 427.0], [89.0, 427.0], [89.1, 427.0], [89.2, 428.0], [89.3, 429.0], [89.4, 429.0], [89.5, 430.0], [89.6, 430.0], [89.7, 431.0], [89.8, 432.0], [89.9, 432.0], [90.0, 433.0], [90.1, 433.0], [90.2, 434.0], [90.3, 435.0], [90.4, 435.0], [90.5, 435.0], [90.6, 436.0], [90.7, 437.0], [90.8, 437.0], [90.9, 438.0], [91.0, 438.0], [91.1, 439.0], [91.2, 440.0], [91.3, 440.0], [91.4, 441.0], [91.5, 441.0], [91.6, 443.0], [91.7, 443.0], [91.8, 444.0], [91.9, 445.0], [92.0, 446.0], [92.1, 447.0], [92.2, 448.0], [92.3, 448.0], [92.4, 449.0], [92.5, 450.0], [92.6, 451.0], [92.7, 451.0], [92.8, 452.0], [92.9, 453.0], [93.0, 454.0], [93.1, 455.0], [93.2, 456.0], [93.3, 457.0], [93.4, 458.0], [93.5, 459.0], [93.6, 460.0], [93.7, 461.0], [93.8, 462.0], [93.9, 463.0], [94.0, 465.0], [94.1, 466.0], [94.2, 467.0], [94.3, 468.0], [94.4, 469.0], [94.5, 470.0], [94.6, 471.0], [94.7, 472.0], [94.8, 473.0], [94.9, 475.0], [95.0, 476.0], [95.1, 477.0], [95.2, 479.0], [95.3, 480.0], [95.4, 482.0], [95.5, 483.0], [95.6, 484.0], [95.7, 485.0], [95.8, 487.0], [95.9, 488.0], [96.0, 490.0], [96.1, 491.0], [96.2, 493.0], [96.3, 495.0], [96.4, 496.0], [96.5, 500.0], [96.6, 501.0], [96.7, 502.0], [96.8, 504.0], [96.9, 506.0], [97.0, 509.0], [97.1, 512.0], [97.2, 514.0], [97.3, 516.0], [97.4, 518.0], [97.5, 522.0], [97.6, 526.0], [97.7, 528.0], [97.8, 530.0], [97.9, 533.0], [98.0, 538.0], [98.1, 540.0], [98.2, 542.0], [98.3, 545.0], [98.4, 549.0], [98.5, 552.0], [98.6, 556.0], [98.7, 561.0], [98.8, 566.0], [98.9, 571.0], [99.0, 573.0], [99.1, 579.0], [99.2, 585.0], [99.3, 590.0], [99.4, 602.0], [99.5, 615.0], [99.6, 630.0], [99.7, 652.0], [99.8, 692.0], [99.9, 783.0]], "isOverall": false, "label": "Reserve - Book Flight", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4932.0, "series": [{"data": [[0.0, 1.0], [1100.0, 2.0], [300.0, 4733.0], [600.0, 64.0], [1200.0, 1.0], [1300.0, 1.0], [700.0, 7.0], [200.0, 4410.0], [400.0, 1440.0], [800.0, 2.0], [500.0, 332.0], [1000.0, 1.0]], "isOverall": false, "label": "Purchase", "isController": false}, {"data": [[0.0, 1.0], [1100.0, 1.0], [600.0, 58.0], [300.0, 4415.0], [1200.0, 1.0], [700.0, 15.0], [400.0, 1418.0], [200.0, 4932.0], [800.0, 1.0], [900.0, 2.0], [500.0, 295.0], [1000.0, 2.0]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1100.0, 2.0], [300.0, 4737.0], [600.0, 66.0], [1200.0, 1.0], [700.0, 9.0], [200.0, 4393.0], [400.0, 1405.0], [500.0, 306.0]], "isOverall": false, "label": "Confirmation", "isController": false}, {"data": [[1100.0, 2.0], [300.0, 4883.0], [600.0, 50.0], [1200.0, 1.0], [1300.0, 1.0], [700.0, 11.0], [200.0, 4344.0], [400.0, 1446.0], [800.0, 4.0], [900.0, 1.0], [500.0, 318.0], [1000.0, 1.0]], "isOverall": false, "label": "Reserve - Book Flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 1300.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 2.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 42584.0, "series": [{"data": [[0.0, 42584.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 1530.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 2.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 95.77072671443193, "minX": 1.7275707E12, "maxY": 288.0, "series": [{"data": [[1.72757082E12, 288.0], [1.7275707E12, 95.77072671443193], [1.72757088E12, 284.1320669787543], [1.72757076E12, 272.4666313208293]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72757088E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 254.0, "minX": 1.0, "maxY": 583.0, "series": [{"data": [[2.0, 438.0], [5.0, 466.0], [7.0, 391.0], [8.0, 458.0], [12.0, 445.0], [13.0, 513.0], [14.0, 275.8333333333333], [16.0, 262.0], [17.0, 332.5], [18.0, 271.0], [19.0, 294.0], [20.0, 264.0], [21.0, 300.5], [22.0, 375.5], [23.0, 286.0], [24.0, 269.25], [25.0, 286.6666666666667], [26.0, 284.25], [28.0, 276.3333333333333], [29.0, 266.5], [30.0, 254.0], [31.0, 264.3333333333333], [32.0, 313.5], [33.0, 268.0], [34.0, 339.0], [35.0, 280.0], [36.0, 271.71428571428567], [37.0, 264.0], [38.0, 272.0], [39.0, 277.25], [40.0, 275.0], [41.0, 280.5], [42.0, 309.5], [43.0, 323.3333333333333], [44.0, 278.0], [45.0, 309.0], [46.0, 271.0], [47.0, 283.0], [48.0, 291.0], [49.0, 299.4], [50.0, 333.24999999999994], [51.0, 293.5], [52.0, 286.0], [53.0, 291.0], [54.0, 310.6], [55.0, 305.3333333333333], [56.0, 284.3333333333333], [57.0, 279.83333333333337], [58.0, 297.4], [59.0, 313.28571428571433], [60.0, 305.875], [61.0, 279.25], [62.0, 281.25], [63.0, 307.2], [64.0, 333.75], [65.0, 360.0], [66.0, 328.8888888888889], [67.0, 322.8], [68.0, 307.8333333333333], [69.0, 335.1666666666667], [70.0, 324.16666666666663], [71.0, 277.8571428571429], [72.0, 315.0], [73.0, 394.375], [74.0, 297.2], [75.0, 308.0], [76.0, 342.0], [77.0, 393.6666666666667], [78.0, 306.6], [79.0, 327.22222222222223], [80.0, 361.5], [81.0, 336.77777777777777], [82.0, 302.2857142857143], [83.0, 282.66666666666663], [84.0, 385.2], [85.0, 324.6], [86.0, 320.55555555555554], [87.0, 301.5], [88.0, 347.33333333333337], [89.0, 355.33333333333337], [90.0, 330.4], [91.0, 351.0], [92.0, 394.4], [93.0, 359.1111111111111], [94.0, 410.5], [95.0, 377.6666666666667], [96.0, 329.25], [97.0, 324.0], [98.0, 341.57142857142856], [99.0, 379.875], [100.0, 317.875], [101.0, 382.0], [102.0, 334.14285714285717], [103.0, 346.80000000000007], [104.0, 404.0], [105.0, 359.6], [106.0, 350.75], [107.0, 352.2], [108.0, 334.1111111111111], [109.0, 292.49999999999994], [110.0, 319.57142857142856], [111.0, 354.14285714285717], [112.0, 348.5], [113.0, 367.5714285714286], [114.0, 345.25], [115.0, 360.2], [116.0, 326.14285714285717], [117.0, 342.55555555555554], [118.0, 374.4], [119.0, 305.625], [120.0, 346.75], [121.0, 355.5], [122.0, 378.57142857142856], [123.0, 339.0], [124.0, 310.3333333333333], [125.0, 434.75], [126.0, 356.875], [127.0, 334.1111111111111], [128.0, 359.8571428571429], [129.0, 315.85714285714283], [130.0, 406.71428571428567], [131.0, 334.99999999999994], [132.0, 346.7142857142857], [133.0, 315.2], [134.0, 367.42857142857144], [135.0, 331.8888888888889], [136.0, 317.8888888888889], [137.0, 331.6], [138.0, 297.8], [139.0, 320.33333333333337], [140.0, 377.6363636363636], [141.0, 313.25], [142.0, 368.3333333333333], [143.0, 305.2], [144.0, 313.5], [145.0, 501.6666666666667], [146.0, 298.4285714285714], [147.0, 377.0], [148.0, 308.1428571428571], [149.0, 337.12499999999994], [150.0, 353.79999999999995], [151.0, 332.83333333333337], [152.0, 308.25], [153.0, 341.8888888888889], [154.0, 314.25], [155.0, 360.3], [156.0, 302.0], [157.0, 301.4], [158.0, 307.875], [159.0, 367.875], [160.0, 361.6], [161.0, 329.25], [162.0, 290.5], [163.0, 376.50000000000006], [164.0, 318.0], [165.0, 414.1666666666667], [166.0, 301.75], [167.0, 375.66666666666663], [168.0, 310.2], [169.0, 284.7142857142857], [170.0, 374.6], [171.0, 339.83333333333337], [172.0, 329.42857142857144], [173.0, 357.5], [174.0, 377.77777777777777], [175.0, 362.0], [176.0, 384.90909090909093], [177.0, 330.6666666666667], [178.0, 344.37499999999994], [179.0, 343.2857142857143], [180.0, 348.4285714285714], [181.0, 308.875], [182.0, 310.0], [183.0, 319.4285714285714], [184.0, 328.9090909090909], [185.0, 294.75], [186.0, 345.66666666666663], [187.0, 292.0], [188.0, 348.0909090909091], [189.0, 282.6666666666667], [190.0, 291.2], [191.0, 425.14285714285717], [192.0, 317.0], [193.0, 368.75], [194.0, 332.8888888888889], [195.0, 323.8], [196.0, 315.66666666666663], [197.0, 308.8333333333333], [198.0, 320.0], [199.0, 349.25], [200.0, 304.0909090909091], [201.0, 304.2], [202.0, 309.00000000000006], [203.0, 329.8888888888889], [204.0, 293.5], [205.0, 278.5], [206.0, 340.14285714285717], [207.0, 358.12500000000006], [208.0, 351.8333333333333], [209.0, 331.2857142857143], [210.0, 340.0], [211.0, 359.7272727272727], [212.0, 284.8], [213.0, 303.5], [214.0, 313.71428571428567], [215.0, 370.46153846153845], [216.0, 291.0], [217.0, 298.4], [218.0, 324.72727272727275], [219.0, 298.6666666666667], [220.0, 271.5], [221.0, 355.8], [222.0, 455.25], [223.0, 339.16666666666663], [224.0, 321.66666666666663], [225.0, 313.2222222222222], [226.0, 298.6666666666667], [227.0, 298.8333333333333], [228.0, 304.2], [229.0, 309.0], [230.0, 326.5454545454545], [231.0, 360.42857142857144], [232.0, 306.9], [233.0, 292.0], [234.0, 296.0], [235.0, 325.2], [236.0, 345.7142857142857], [237.0, 299.2857142857143], [238.0, 332.6666666666667], [239.0, 302.5714285714286], [240.0, 313.0], [241.0, 349.875], [242.0, 318.6], [243.0, 298.6], [244.0, 330.5], [245.0, 338.7142857142857], [246.0, 323.00000000000006], [247.0, 328.3333333333333], [248.0, 307.5], [249.0, 339.5], [250.0, 341.6666666666667], [251.0, 287.6666666666667], [252.0, 316.8571428571429], [253.0, 319.09999999999997], [254.0, 301.2857142857143], [255.0, 309.3333333333333], [257.0, 358.44444444444446], [256.0, 294.5714285714286], [258.0, 403.42857142857144], [259.0, 315.6666666666667], [260.0, 359.44444444444446], [261.0, 306.25], [262.0, 317.09090909090907], [263.0, 290.2], [264.0, 269.5], [270.0, 331.55555555555554], [271.0, 334.8333333333333], [268.0, 330.8], [269.0, 364.0], [265.0, 309.0], [266.0, 317.99999999999994], [267.0, 295.1666666666667], [273.0, 324.0], [272.0, 310.9], [274.0, 312.87499999999994], [275.0, 309.6666666666667], [276.0, 313.7142857142857], [277.0, 316.2], [278.0, 308.5], [279.0, 322.85714285714283], [280.0, 301.75], [286.0, 305.3333333333333], [287.0, 380.6666666666667], [284.0, 295.0], [285.0, 309.75], [281.0, 287.5], [282.0, 339.375], [283.0, 346.25], [288.0, 338.11746439661624]], "isOverall": false, "label": "Purchase", "isController": false}, {"data": [[269.3243587411283, 336.8420956885591]], "isOverall": false, "label": "Purchase-Aggregated", "isController": false}, {"data": [[4.0, 428.0], [6.0, 471.0], [9.0, 581.3333333333334], [10.0, 399.5], [11.0, 399.0], [12.0, 407.0], [13.0, 397.0], [15.0, 438.6666666666667], [16.0, 386.0], [17.0, 401.0], [19.0, 324.4], [20.0, 303.25], [21.0, 403.6666666666667], [22.0, 334.0], [23.0, 313.6666666666667], [24.0, 334.0], [25.0, 403.5], [26.0, 353.6666666666667], [27.0, 358.6666666666667], [28.0, 333.0], [29.0, 264.0], [30.0, 309.875], [31.0, 295.25], [32.0, 331.0], [33.0, 271.0], [34.0, 329.6], [35.0, 286.0], [36.0, 333.2], [37.0, 446.0], [38.0, 344.5], [39.0, 266.0], [40.0, 302.5714285714286], [41.0, 298.66666666666663], [42.0, 298.6], [43.0, 423.25], [44.0, 293.1666666666667], [45.0, 284.5], [46.0, 364.6666666666667], [47.0, 318.0], [48.0, 285.6666666666667], [49.0, 308.8], [50.0, 350.5], [51.0, 323.4], [52.0, 326.6666666666667], [53.0, 317.2857142857143], [54.0, 309.5], [55.0, 354.5], [56.0, 295.55555555555554], [57.0, 339.6], [58.0, 275.0], [59.0, 349.6], [60.0, 315.0], [61.0, 275.0], [62.0, 328.25000000000006], [63.0, 346.5], [64.0, 315.0], [65.0, 274.0], [66.0, 369.5], [67.0, 343.1666666666667], [68.0, 314.75], [69.0, 435.0], [70.0, 342.0], [71.0, 272.5], [72.0, 331.0], [73.0, 356.33333333333337], [74.0, 369.44444444444446], [75.0, 293.57142857142856], [76.0, 315.42857142857144], [77.0, 344.3333333333333], [78.0, 361.99999999999994], [79.0, 356.8], [80.0, 363.375], [81.0, 374.0], [82.0, 318.6], [83.0, 362.16666666666663], [84.0, 583.0], [85.0, 321.0], [86.0, 356.8888888888889], [87.0, 358.0], [88.0, 388.4], [89.0, 302.0], [90.0, 338.2], [91.0, 405.16666666666663], [92.0, 281.6], [93.0, 358.2], [94.0, 369.6363636363637], [95.0, 335.6], [96.0, 329.0], [97.0, 354.83333333333337], [98.0, 416.0], [99.0, 343.14285714285717], [100.0, 331.75], [101.0, 316.6], [102.0, 348.8333333333333], [103.0, 388.3333333333333], [104.0, 317.75], [105.0, 316.75000000000006], [106.0, 265.5], [107.0, 339.1666666666667], [108.0, 375.4545454545455], [109.0, 455.3333333333333], [110.0, 313.33333333333337], [111.0, 308.8], [112.0, 372.33333333333337], [113.0, 416.2857142857143], [114.0, 433.8], [115.0, 356.0], [116.0, 305.8333333333333], [117.0, 388.14285714285717], [118.0, 319.09090909090907], [119.0, 352.0], [120.0, 344.2857142857143], [121.0, 357.74999999999994], [122.0, 394.2], [123.0, 401.36363636363643], [124.0, 385.0], [125.0, 374.5714285714286], [126.0, 369.3636363636363], [127.0, 383.28571428571433], [128.0, 345.8], [129.0, 337.1428571428571], [130.0, 372.9], [131.0, 365.8333333333333], [132.0, 325.4], [133.0, 311.25], [134.0, 463.3333333333333], [135.0, 349.33333333333337], [136.0, 355.125], [137.0, 340.24999999999994], [138.0, 375.0], [139.0, 325.2], [140.0, 504.4], [141.0, 336.9090909090909], [142.0, 342.5], [143.0, 361.77777777777777], [144.0, 319.2857142857143], [145.0, 320.4], [146.0, 310.75], [147.0, 374.4], [148.0, 397.5], [149.0, 337.66666666666663], [150.0, 427.0], [151.0, 379.1111111111111], [152.0, 371.0], [153.0, 364.0], [154.0, 369.5714285714286], [155.0, 391.25], [156.0, 381.99999999999994], [157.0, 349.8], [158.0, 369.6], [159.0, 409.66666666666663], [160.0, 371.875], [161.0, 372.22222222222223], [162.0, 341.85714285714283], [163.0, 450.33333333333337], [164.0, 364.81818181818187], [165.0, 381.4], [166.0, 388.1666666666667], [167.0, 305.5], [168.0, 413.75], [169.0, 360.2857142857143], [170.0, 341.3333333333333], [171.0, 346.8], [172.0, 357.8], [173.0, 421.8571428571429], [174.0, 306.0], [175.0, 391.09999999999997], [176.0, 374.57142857142856], [177.0, 428.57142857142856], [178.0, 357.6], [179.0, 384.8333333333333], [180.0, 401.1111111111111], [181.0, 353.0], [182.0, 372.625], [183.0, 331.55555555555554], [184.0, 369.55555555555554], [185.0, 312.25], [186.0, 375.1], [187.0, 348.1], [188.0, 375.3333333333333], [189.0, 303.5], [190.0, 341.0], [191.0, 332.375], [192.0, 335.16666666666663], [193.0, 342.42857142857144], [194.0, 331.77777777777777], [195.0, 366.0], [196.0, 331.45454545454544], [197.0, 326.4], [198.0, 326.8888888888889], [199.0, 345.44444444444446], [200.0, 363.4], [201.0, 317.6666666666667], [202.0, 339.16666666666663], [203.0, 313.55555555555554], [204.0, 326.1111111111111], [205.0, 287.8], [206.0, 448.14285714285717], [207.0, 371.0], [208.0, 345.5714285714286], [209.0, 285.8], [210.0, 429.875], [211.0, 310.5], [212.0, 371.0], [213.0, 308.1428571428571], [214.0, 446.88888888888886], [215.0, 384.7142857142857], [216.0, 318.2222222222222], [217.0, 310.875], [218.0, 335.8333333333333], [219.0, 313.42857142857144], [220.0, 334.5555555555555], [221.0, 353.5], [222.0, 302.0], [223.0, 368.3333333333333], [224.0, 340.625], [225.0, 291.2857142857143], [226.0, 319.57142857142856], [227.0, 312.0], [228.0, 345.0], [229.0, 337.55555555555554], [230.0, 342.125], [231.0, 315.8888888888889], [232.0, 380.75], [233.0, 327.8], [234.0, 307.6666666666667], [235.0, 318.72727272727275], [236.0, 306.7142857142857], [237.0, 300.375], [238.0, 306.6666666666667], [239.0, 367.22222222222223], [240.0, 283.5], [241.0, 339.9000000000001], [242.0, 328.14285714285717], [243.0, 309.8], [244.0, 374.5], [245.0, 347.6], [246.0, 348.1111111111111], [247.0, 305.5714285714286], [248.0, 307.85714285714283], [249.0, 374.42857142857144], [250.0, 345.6666666666667], [251.0, 332.08333333333337], [252.0, 305.8888888888889], [253.0, 341.8333333333333], [254.0, 323.37500000000006], [255.0, 342.6], [257.0, 362.75], [256.0, 312.14285714285717], [258.0, 331.75], [259.0, 328.44444444444446], [260.0, 351.72727272727275], [261.0, 284.5], [262.0, 330.75], [263.0, 295.75], [264.0, 378.0], [270.0, 325.3333333333333], [271.0, 409.2], [268.0, 341.14285714285717], [269.0, 391.1], [265.0, 305.0], [266.0, 345.1666666666667], [267.0, 329.8571428571429], [273.0, 349.3], [272.0, 314.4], [274.0, 330.4545454545455], [275.0, 326.2], [276.0, 301.3636363636364], [277.0, 373.2857142857143], [278.0, 300.0], [279.0, 392.0], [280.0, 309.6666666666667], [286.0, 316.8], [287.0, 343.0], [284.0, 339.5], [285.0, 301.85714285714283], [281.0, 357.4], [282.0, 350.80000000000007], [283.0, 374.5714285714286], [288.0, 328.45829317914007]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[267.62489902163094, 331.6101786195142]], "isOverall": false, "label": "Home Page-Aggregated", "isController": false}, {"data": [[3.0, 450.0], [17.0, 280.3333333333333], [18.0, 273.0], [20.0, 283.5], [21.0, 285.0], [22.0, 265.0], [23.0, 267.0], [24.0, 286.5], [25.0, 260.0], [27.0, 307.2], [28.0, 272.0], [29.0, 270.6666666666667], [30.0, 338.0], [31.0, 272.75], [32.0, 290.0], [33.0, 263.0], [34.0, 361.5], [35.0, 268.5], [36.0, 293.0], [37.0, 277.5], [38.0, 290.6], [39.0, 290.7142857142857], [40.0, 270.0], [41.0, 282.6666666666667], [42.0, 268.2], [43.0, 290.5], [44.0, 327.25], [45.0, 265.0], [46.0, 279.4], [47.0, 295.5], [48.0, 304.0], [49.0, 273.25], [50.0, 349.8], [51.0, 302.75], [52.0, 297.0], [53.0, 285.33333333333337], [54.0, 316.2], [55.0, 319.0], [56.0, 291.5], [57.0, 278.5], [58.0, 301.2], [59.0, 292.7142857142857], [60.0, 291.3333333333333], [61.0, 301.8], [62.0, 298.11111111111114], [63.0, 345.5], [64.0, 285.0], [65.0, 318.75], [66.0, 367.3333333333333], [67.0, 357.2], [68.0, 384.0], [69.0, 322.40000000000003], [70.0, 335.5], [71.0, 292.0], [72.0, 316.375], [73.0, 307.4], [74.0, 367.0], [75.0, 350.0], [76.0, 280.8], [77.0, 363.375], [78.0, 301.33333333333337], [79.0, 306.83333333333337], [80.0, 398.0], [81.0, 339.0], [82.0, 355.5], [83.0, 319.875], [84.0, 337.2], [85.0, 331.2], [86.0, 309.4], [87.0, 356.1666666666667], [88.0, 369.5], [89.0, 309.44444444444446], [90.0, 331.33333333333337], [91.0, 305.3333333333333], [92.0, 374.4], [93.0, 382.0], [94.0, 390.8333333333333], [95.0, 356.5], [96.0, 294.5], [97.0, 329.0], [98.0, 373.5714285714286], [99.0, 424.1], [100.0, 322.6666666666667], [101.0, 306.0], [102.0, 320.4], [103.0, 367.2], [104.0, 354.7692307692307], [105.0, 263.0], [106.0, 310.0], [107.0, 334.0], [108.0, 356.6666666666667], [109.0, 429.6666666666667], [110.0, 332.75], [111.0, 298.33333333333337], [112.0, 286.8], [113.0, 376.4285714285714], [114.0, 309.125], [115.0, 319.3333333333333], [116.0, 327.3], [117.0, 297.8], [118.0, 346.3333333333333], [119.0, 347.83333333333337], [120.0, 328.0], [121.0, 307.5714285714286], [122.0, 355.0], [123.0, 322.12500000000006], [124.0, 380.2], [125.0, 373.33333333333337], [126.0, 424.0], [127.0, 317.0], [128.0, 339.0], [129.0, 304.6666666666667], [130.0, 350.0], [131.0, 349.0], [132.0, 331.90000000000003], [133.0, 320.85714285714283], [134.0, 342.55555555555554], [135.0, 353.0], [136.0, 343.0], [137.0, 402.77777777777777], [138.0, 368.8], [139.0, 304.6666666666667], [140.0, 385.875], [141.0, 317.40000000000003], [142.0, 371.25], [143.0, 343.6], [144.0, 350.9], [145.0, 320.33333333333337], [146.0, 309.5], [147.0, 392.33333333333337], [148.0, 362.2], [149.0, 355.75], [150.0, 326.125], [151.0, 320.16666666666663], [152.0, 345.4], [153.0, 323.57142857142856], [154.0, 296.99999999999994], [155.0, 339.6666666666667], [156.0, 302.0], [157.0, 351.5], [158.0, 314.4], [159.0, 410.14285714285717], [160.0, 417.6], [161.0, 378.5714285714286], [162.0, 341.3333333333333], [163.0, 312.2], [164.0, 348.6666666666667], [165.0, 352.42857142857144], [166.0, 281.3333333333333], [167.0, 384.8888888888889], [168.0, 317.28571428571433], [169.0, 326.7142857142857], [170.0, 316.3333333333333], [171.0, 352.25], [172.0, 314.0], [173.0, 324.66666666666663], [174.0, 315.6], [175.0, 357.5], [176.0, 357.6], [177.0, 351.54545454545456], [178.0, 385.75], [179.0, 313.875], [180.0, 346.54545454545456], [181.0, 335.99999999999994], [182.0, 338.5], [183.0, 350.42857142857144], [184.0, 349.6666666666667], [185.0, 348.28571428571433], [186.0, 306.4], [187.0, 362.2], [188.0, 329.6666666666667], [189.0, 371.33333333333337], [190.0, 358.8], [191.0, 363.8571428571429], [192.0, 381.22222222222223], [193.0, 381.875], [194.0, 311.8], [195.0, 327.5], [196.0, 341.71428571428567], [197.0, 319.25], [198.0, 364.22222222222223], [199.0, 287.0], [200.0, 304.5], [201.0, 316.8888888888889], [202.0, 317.5], [203.0, 306.8], [204.0, 291.2], [205.0, 280.5], [206.0, 348.55555555555554], [207.0, 350.3333333333333], [208.0, 311.66666666666663], [209.0, 341.16666666666663], [210.0, 348.45454545454544], [211.0, 372.0], [212.0, 307.0], [213.0, 294.0], [214.0, 338.625], [215.0, 343.375], [216.0, 340.0], [217.0, 314.6666666666667], [218.0, 326.8571428571429], [219.0, 313.5], [220.0, 339.5], [221.0, 307.375], [222.0, 315.2222222222223], [223.0, 297.7142857142857], [224.0, 336.6], [225.0, 284.3333333333333], [226.0, 331.8181818181818], [227.0, 328.2], [228.0, 326.85714285714283], [229.0, 310.42857142857144], [230.0, 351.55555555555554], [231.0, 306.5], [232.0, 318.2857142857143], [233.0, 336.57142857142856], [234.0, 317.0], [235.0, 351.5], [236.0, 308.42857142857144], [237.0, 310.5], [238.0, 313.0], [239.0, 312.0], [240.0, 319.75], [241.0, 300.8], [242.0, 321.0], [243.0, 284.42857142857144], [244.0, 286.3], [245.0, 320.8333333333333], [246.0, 298.0], [247.0, 302.8], [248.0, 303.6666666666667], [249.0, 329.8181818181818], [250.0, 336.8333333333333], [251.0, 312.2], [252.0, 306.00000000000006], [253.0, 350.4], [254.0, 349.375], [255.0, 315.2857142857143], [257.0, 306.0], [256.0, 294.3333333333333], [258.0, 319.37499999999994], [259.0, 301.71428571428567], [260.0, 375.125], [261.0, 328.25], [262.0, 293.14285714285717], [263.0, 306.22222222222223], [264.0, 288.14285714285717], [270.0, 322.33333333333337], [271.0, 312.3333333333333], [268.0, 331.0], [269.0, 328.14285714285717], [265.0, 322.6], [266.0, 301.19999999999993], [267.0, 286.7142857142857], [273.0, 325.3333333333333], [272.0, 321.5], [274.0, 299.8], [275.0, 297.5], [276.0, 310.2], [277.0, 305.22222222222223], [278.0, 301.0], [279.0, 340.5], [280.0, 309.33333333333337], [286.0, 321.8333333333333], [287.0, 298.6], [284.0, 332.9], [285.0, 297.14285714285717], [281.0, 322.5], [282.0, 332.1111111111111], [283.0, 326.72727272727275], [288.0, 337.2345189629328], [1.0, 459.0]], "isOverall": false, "label": "Confirmation", "isController": false}, {"data": [[270.19974356625914, 336.0099825991383]], "isOverall": false, "label": "Confirmation-Aggregated", "isController": false}, {"data": [[9.0, 410.0], [11.0, 331.75], [12.0, 271.0], [13.0, 265.0], [14.0, 376.5], [15.0, 264.0], [16.0, 268.0], [17.0, 274.0], [18.0, 278.0], [19.0, 289.0], [20.0, 308.0], [22.0, 272.0], [23.0, 280.0], [24.0, 273.0], [25.0, 275.0], [26.0, 334.5], [27.0, 275.0], [28.0, 286.0], [29.0, 280.0], [30.0, 269.0], [31.0, 285.0], [32.0, 284.0], [33.0, 281.2], [34.0, 272.25], [35.0, 303.6666666666667], [36.0, 287.3333333333333], [37.0, 301.8], [38.0, 260.3333333333333], [39.0, 293.0], [40.0, 313.0], [41.0, 282.2], [42.0, 290.0], [43.0, 290.0], [44.0, 321.0], [45.0, 318.0], [46.0, 344.25], [47.0, 280.85714285714283], [48.0, 278.0], [49.0, 309.3333333333333], [50.0, 312.6666666666667], [51.0, 284.6666666666667], [52.0, 289.8], [53.0, 288.3333333333333], [54.0, 285.3333333333333], [55.0, 323.75], [56.0, 277.0], [57.0, 280.4444444444445], [58.0, 277.0], [59.0, 316.8333333333333], [60.0, 335.85714285714283], [61.0, 303.0], [62.0, 303.0], [63.0, 294.5], [65.0, 302.2857142857143], [66.0, 362.8333333333333], [67.0, 285.75], [68.0, 333.7142857142857], [69.0, 324.2857142857143], [70.0, 309.6], [71.0, 281.8], [72.0, 402.5], [73.0, 315.74999999999994], [74.0, 266.0], [75.0, 346.83333333333337], [76.0, 333.8], [77.0, 332.8888888888889], [78.0, 356.75], [79.0, 328.62500000000006], [80.0, 371.8], [81.0, 321.3333333333333], [82.0, 362.57142857142856], [83.0, 335.14285714285717], [84.0, 311.125], [85.0, 342.75], [86.0, 308.5], [87.0, 373.4], [88.0, 298.0], [89.0, 340.5], [90.0, 325.75], [91.0, 323.85714285714283], [92.0, 358.8333333333333], [93.0, 328.2], [94.0, 318.75], [95.0, 367.8], [96.0, 327.14285714285717], [97.0, 348.14285714285717], [98.0, 314.2], [99.0, 373.33333333333337], [100.0, 361.33333333333337], [101.0, 287.2], [103.0, 343.0], [104.0, 328.6666666666667], [105.0, 305.0], [106.0, 310.875], [107.0, 367.2], [108.0, 381.83333333333337], [109.0, 425.3333333333333], [110.0, 352.4], [111.0, 313.0], [112.0, 312.625], [113.0, 387.5714285714286], [114.0, 387.40000000000003], [115.0, 384.75], [116.0, 322.8571428571429], [117.0, 383.6666666666667], [118.0, 418.0], [119.0, 366.44444444444446], [120.0, 362.5], [121.0, 335.5], [122.0, 312.8888888888889], [123.0, 300.5], [124.0, 361.375], [125.0, 328.875], [126.0, 316.58333333333337], [127.0, 286.0], [128.0, 310.5], [129.0, 346.2], [130.0, 354.12499999999994], [131.0, 350.0], [132.0, 362.25], [133.0, 380.7777777777777], [134.0, 363.0], [135.0, 318.2], [136.0, 402.8], [137.0, 401.0], [138.0, 452.0], [139.0, 334.57142857142856], [140.0, 383.22222222222223], [141.0, 334.75], [142.0, 304.2], [143.0, 325.1666666666667], [144.0, 339.1428571428571], [145.0, 356.875], [146.0, 350.0], [147.0, 362.99999999999994], [148.0, 371.8], [149.0, 335.3333333333333], [150.0, 354.2857142857143], [151.0, 355.5], [152.0, 304.37500000000006], [153.0, 323.42857142857144], [154.0, 348.66666666666663], [155.0, 386.1111111111111], [156.0, 315.6], [157.0, 317.0], [158.0, 393.8888888888889], [159.0, 395.6666666666667], [160.0, 355.6666666666667], [161.0, 347.9], [162.0, 298.0], [163.0, 314.875], [164.0, 338.4285714285714], [165.0, 367.0], [166.0, 314.7272727272727], [167.0, 323.8], [168.0, 337.14285714285717], [169.0, 383.0], [170.0, 333.625], [171.0, 348.3333333333333], [172.0, 333.0], [173.0, 387.66666666666663], [174.0, 382.16666666666663], [175.0, 402.1666666666667], [176.0, 338.5], [177.0, 408.375], [178.0, 346.5], [179.0, 341.0], [180.0, 359.375], [181.0, 314.5714285714286], [182.0, 389.25], [183.0, 333.125], [184.0, 365.4], [185.0, 313.00000000000006], [186.0, 281.7142857142857], [187.0, 355.5], [188.0, 357.2], [189.0, 352.6], [190.0, 344.7142857142857], [191.0, 395.3333333333333], [192.0, 368.11111111111114], [193.0, 343.12499999999994], [194.0, 339.3], [195.0, 335.6], [196.0, 320.50000000000006], [197.0, 302.5], [198.0, 308.625], [199.0, 356.8571428571429], [200.0, 276.0], [201.0, 334.5], [202.0, 334.2222222222222], [203.0, 313.0], [204.0, 303.85714285714283], [205.0, 334.0], [206.0, 327.22222222222223], [207.0, 351.57142857142856], [208.0, 349.5], [209.0, 326.85714285714283], [210.0, 372.00000000000006], [211.0, 385.3333333333333], [212.0, 356.90000000000003], [213.0, 301.77777777777777], [214.0, 417.25], [215.0, 297.6666666666667], [216.0, 311.75], [217.0, 332.3], [218.0, 317.5], [219.0, 298.25], [220.0, 317.8333333333333], [221.0, 345.0], [222.0, 310.12500000000006], [223.0, 323.3333333333333], [224.0, 300.0], [225.0, 294.42857142857144], [226.0, 333.0], [227.0, 331.0], [228.0, 300.3333333333333], [229.0, 306.7142857142857], [230.0, 353.125], [231.0, 318.0], [232.0, 337.8888888888889], [233.0, 322.8], [234.0, 311.79999999999995], [235.0, 292.83333333333337], [236.0, 294.16666666666663], [237.0, 302.66666666666663], [238.0, 285.33333333333337], [239.0, 327.125], [240.0, 325.7142857142857], [241.0, 354.44444444444446], [242.0, 346.25], [243.0, 304.6666666666667], [244.0, 335.3636363636364], [245.0, 309.16666666666663], [246.0, 327.8], [247.0, 321.0833333333333], [248.0, 296.0], [249.0, 305.75], [250.0, 420.1666666666667], [251.0, 290.125], [252.0, 313.6], [253.0, 350.14285714285717], [254.0, 325.8333333333333], [255.0, 314.85714285714283], [257.0, 298.2], [256.0, 311.16666666666663], [258.0, 324.75], [259.0, 375.2], [260.0, 332.4], [261.0, 311.25], [262.0, 315.3333333333333], [263.0, 308.0], [264.0, 298.1428571428571], [270.0, 368.44444444444446], [271.0, 324.0], [268.0, 337.59999999999997], [269.0, 341.0], [265.0, 358.80000000000007], [266.0, 309.85714285714283], [267.0, 315.6666666666667], [273.0, 351.1666666666667], [272.0, 290.66666666666663], [274.0, 329.0], [275.0, 333.70000000000005], [276.0, 306.42857142857144], [277.0, 302.0], [278.0, 309.25], [279.0, 308.90909090909093], [280.0, 319.57142857142856], [286.0, 302.0], [287.0, 300.2727272727273], [284.0, 301.25], [285.0, 327.9], [281.0, 357.57142857142856], [282.0, 358.4], [283.0, 339.22222222222223], [288.0, 338.0703802892331]], "isOverall": false, "label": "Reserve - Book Flight", "isController": false}, {"data": [[268.6460856987901, 337.2064726089312]], "isOverall": false, "label": "Reserve - Book Flight-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 288.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 12688.65, "minX": 1.7275707E12, "maxY": 1548108.4666666666, "series": [{"data": [[1.72757082E12, 1538428.7666666666], [1.7275707E12, 300246.9], [1.72757088E12, 1140229.85], [1.72757076E12, 1548108.4666666666]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.72757082E12, 66255.81666666667], [1.7275707E12, 12688.65], [1.72757088E12, 49092.36666666667], [1.72757076E12, 66441.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72757088E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 326.3984520950091, "minX": 1.7275707E12, "maxY": 349.5585241730278, "series": [{"data": [[1.72757082E12, 336.83377801494134], [1.7275707E12, 329.8865546218487], [1.72757088E12, 333.7230215827335], [1.72757076E12, 340.4850746268657]], "isOverall": false, "label": "Purchase", "isController": false}, {"data": [[1.72757082E12, 326.3984520950091], [1.7275707E12, 349.5585241730278], [1.72757088E12, 326.4881294964029], [1.72757076E12, 336.7460815047025]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1.72757082E12, 336.2473319103523], [1.7275707E12, 328.1314623338254], [1.72757088E12, 334.00072124053355], [1.72757076E12, 338.70169309325485]], "isOverall": false, "label": "Confirmation", "isController": false}, {"data": [[1.72757082E12, 339.6857142857145], [1.7275707E12, 330.01193633952255], [1.72757088E12, 331.2637837837844], [1.72757076E12, 340.54091869060153]], "isOverall": false, "label": "Reserve - Book Flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72757088E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 309.7665782493371, "minX": 1.7275707E12, "maxY": 337.21501272264635, "series": [{"data": [[1.72757082E12, 322.80042689434447], [1.7275707E12, 316.2577030812324], [1.72757088E12, 320.08129496402825], [1.72757076E12, 326.4920042643918]], "isOverall": false, "label": "Purchase", "isController": false}, {"data": [[1.72757082E12, 313.6736055511064], [1.7275707E12, 337.21501272264635], [1.72757088E12, 313.95179856115055], [1.72757076E12, 324.08960292581037]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1.72757082E12, 323.101387406616], [1.7275707E12, 315.2333825701623], [1.72757088E12, 321.4226469527583], [1.72757076E12, 325.85649019081006]], "isOverall": false, "label": "Confirmation", "isController": false}, {"data": [[1.72757082E12, 318.89345794392483], [1.7275707E12, 309.7665782493371], [1.72757088E12, 310.85729729729684], [1.72757076E12, 319.77455121436145]], "isOverall": false, "label": "Reserve - Book Flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72757088E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7275707E12, "maxY": 28.248091603053414, "series": [{"data": [[1.72757082E12, 2.4482390608324502], [1.7275707E12, 0.0], [1.72757088E12, 4.168705035971233], [1.72757076E12, 1.9408315565031975]], "isOverall": false, "label": "Purchase", "isController": false}, {"data": [[1.72757082E12, 1.5284227381905533], [1.7275707E12, 28.248091603053414], [1.72757088E12, 1.1158273381294936], [1.72757076E12, 7.1311389759665476]], "isOverall": false, "label": "Home Page", "isController": false}, {"data": [[1.72757082E12, 1.940768409818577], [1.7275707E12, 0.0], [1.72757088E12, 1.6851785070320966], [1.72757076E12, 1.7731792528890071]], "isOverall": false, "label": "Confirmation", "isController": false}, {"data": [[1.72757082E12, 4.521495327102784], [1.7275707E12, 0.0], [1.72757088E12, 0.6601801801801803], [1.72757076E12, 2.2360084477296684]], "isOverall": false, "label": "Reserve - Book Flight", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72757088E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 245.0, "minX": 1.7275707E12, "maxY": 1361.0, "series": [{"data": [[1.72757082E12, 798.0], [1.7275707E12, 1016.0], [1.72757088E12, 1068.0], [1.72757076E12, 1361.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.72757082E12, 248.0], [1.7275707E12, 248.0], [1.72757088E12, 247.0], [1.72757076E12, 245.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.72757082E12, 428.0], [1.7275707E12, 445.0], [1.72757088E12, 429.0], [1.72757076E12, 437.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.72757082E12, 549.1299999999992], [1.7275707E12, 592.7199999999993], [1.72757088E12, 537.0], [1.72757076E12, 617.1000000000004]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.72757082E12, 315.0], [1.7275707E12, 306.0], [1.72757088E12, 310.0], [1.72757076E12, 315.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.72757082E12, 469.0], [1.7275707E12, 496.0], [1.72757088E12, 465.0], [1.72757076E12, 492.5]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72757088E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 33.5, "minX": 7.0, "maxY": 569.0, "series": [{"data": [[49.0, 277.0], [81.0, 274.0], [7.0, 569.0], [118.0, 273.0], [117.0, 347.0], [140.0, 277.5], [167.0, 291.0], [196.0, 299.5], [218.0, 299.0], [221.0, 320.0], [225.0, 437.0], [228.0, 316.5], [234.0, 328.0], [236.0, 306.0], [239.0, 325.0], [233.0, 305.0], [238.0, 309.0], [242.0, 312.0], [247.0, 312.0], [243.0, 309.0], [241.0, 312.0], [244.0, 313.0], [246.0, 308.0], [240.0, 335.0], [245.0, 315.0], [248.0, 323.0], [249.0, 308.0], [255.0, 312.0], [251.0, 313.0], [252.0, 310.0], [250.0, 308.5], [253.0, 314.0], [254.0, 323.0], [257.0, 311.0], [268.0, 330.0], [258.0, 321.0], [267.0, 308.0], [269.0, 314.0], [256.0, 310.0], [260.0, 319.0], [262.0, 312.0], [259.0, 311.5], [263.0, 310.0], [275.0, 311.0], [298.0, 477.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[250.0, 33.5]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 298.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 7.0, "maxY": 557.0, "series": [{"data": [[49.0, 260.0], [81.0, 259.0], [7.0, 557.0], [118.0, 259.0], [117.0, 334.0], [140.0, 264.0], [167.0, 275.0], [196.0, 284.5], [218.0, 285.5], [221.0, 303.0], [225.0, 417.0], [228.0, 299.5], [234.0, 313.0], [236.0, 292.0], [239.0, 308.0], [233.0, 290.0], [238.0, 296.0], [242.0, 296.0], [247.0, 297.0], [243.0, 294.0], [241.0, 298.0], [244.0, 297.0], [246.0, 293.0], [240.0, 321.0], [245.0, 298.0], [248.0, 308.0], [249.0, 292.0], [255.0, 297.0], [251.0, 298.0], [252.0, 294.0], [250.0, 294.0], [253.0, 299.0], [254.0, 308.5], [257.0, 297.0], [268.0, 315.0], [258.0, 306.0], [267.0, 294.0], [269.0, 297.0], [256.0, 295.0], [260.0, 304.0], [262.0, 297.0], [259.0, 296.0], [263.0, 296.0], [275.0, 296.0], [298.0, 468.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[250.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 298.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 50.36666666666667, "minX": 1.7275707E12, "maxY": 251.25, "series": [{"data": [[1.72757082E12, 249.9], [1.7275707E12, 50.36666666666667], [1.72757088E12, 183.75], [1.72757076E12, 251.25]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72757088E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7275707E12, "maxY": 251.48333333333332, "series": [{"data": [[1.72757082E12, 249.76666666666668], [1.7275707E12, 48.85], [1.72757088E12, 185.13333333333333], [1.72757076E12, 251.48333333333332]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.72757082E12, 0.03333333333333333]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.NoHttpResponseException", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.72757088E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.016666666666666666, "minX": 1.7275707E12, "maxY": 63.8, "series": [{"data": [[1.72757082E12, 62.45], [1.7275707E12, 11.9], [1.72757088E12, 46.333333333333336], [1.72757076E12, 62.53333333333333]], "isOverall": false, "label": "Purchase-success", "isController": false}, {"data": [[1.72757082E12, 0.016666666666666666]], "isOverall": false, "label": "Home Page-failure", "isController": false}, {"data": [[1.72757082E12, 62.43333333333333], [1.7275707E12, 13.1], [1.72757088E12, 46.333333333333336], [1.72757076E12, 63.8]], "isOverall": false, "label": "Home Page-success", "isController": false}, {"data": [[1.72757082E12, 0.016666666666666666]], "isOverall": false, "label": "Purchase-failure", "isController": false}, {"data": [[1.72757082E12, 62.416666666666664], [1.7275707E12, 12.566666666666666], [1.72757088E12, 46.25], [1.72757076E12, 63.13333333333333]], "isOverall": false, "label": "Reserve - Book Flight-success", "isController": false}, {"data": [[1.72757082E12, 62.46666666666667], [1.7275707E12, 11.283333333333333], [1.72757088E12, 46.21666666666667], [1.72757076E12, 62.016666666666666]], "isOverall": false, "label": "Confirmation-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72757088E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.03333333333333333, "minX": 1.7275707E12, "maxY": 251.48333333333332, "series": [{"data": [[1.72757082E12, 249.76666666666668], [1.7275707E12, 48.85], [1.72757088E12, 185.13333333333333], [1.72757076E12, 251.48333333333332]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.72757082E12, 0.03333333333333333]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.72757088E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, -10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

